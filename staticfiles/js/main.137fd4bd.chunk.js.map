{"version":3,"sources":["utils/Icons.jsx","components/containers/CodeView.jsx","utils/ChatMessage.jsx","global.js","utils/utils.jsx","components/containers/CustomBox.jsx","redux/actions.js","redux/reducers.js","redux/store.js","styles/js/AlterCSS.jsx","components/popup/CreateRoomView.js","components/homecomponents/UserProfileView.js","components/popup/UsersList.js","components/containers/ImageView.jsx","components/homecomponents/RoomNavigation.js","components/containers/ImageContainer.jsx","styles/js/ChatStyles.jsx","components/containers/FileContainer.jsx","utils/Handler.jsx","utils/CropImage.js","components/containers/Photoshop.jsx","components/containers/FileView.jsx","components/popup/FileUploadView.js","components/homecomponents/Room.js","components/Home.jsx","components/Login.jsx","components/Signup.jsx","App.js","reportWebVitals.js","index.js"],"names":["library","add","faGoogle","faArrowDown","google_icon","icon","prefix","iconName","html","CodeView","props","code","language","self","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","appendMessageLeft","selector","message","username","id","parentElement","querySelector","div","createElement","setAttribute","h","innerHTML","$","append","child","iscode","classList","appendChild","ReactDOM","render","innerText","appendMessageRight","console","log","copyTextToClipboard","text","navigator","clipboard","writeText","then","err","error","textArea","value","style","top","left","position","body","focus","select","msg","execCommand","removeChild","fallbackCopyTextToClipboard","web_protocol","window","location","protocol","ws_protocol","hostname","host","api_url","websocket_url","toDataURL","file","callback","reader","FileReader","onload","dataURL","result","readAsDataURL","containerId","fileInputId","a","container","getElementById","fileInputRef","off","on","e","preventDefault","forEach","type","remove","files","originalEvent","dataTransfer","ApiRequester","password","this","method","data","headers","url","ref","Promise","resolve","reject","axios","auth","response","catch","MessageWebApi","client","roomname","user","active_users","is_group","send_message_to_room","command","send","JSON","stringify","description","file_data","Date","now","toString","endsWith","blobFile","fileToLoad","fileReader","fileLoadedEvent","base64","target","convertToBase64","image","output","Tesseract","recognize","progress","packet","Math","round","send_message_to_group","messages","map","push","answered_messages","isanswer","close","CustomBox","boxName","layout","className","htmlFor","placeholder","cols","onClick","handler","align","width","logoutHandler","hidden","size","error_message","CircularProgress","content","title","textColor","color","Component","updateLoading","loading","payload","updateRooms","groups_and_rooms","rooms_data","groups_data","rooms","group","room","updateUser","initialRoomState","message_api","userDataReducer","createReducer","builder","addCase","state","action","navigationStateReducer","roomStateReducer","currentRoom","roomLoading","rootReducer","combineReducers","roomNavState","roomState","userData","store","configureStore","reducer","preloadedState","show_info","time","getElementsByTagName","setTimeout","unmountComponentAtNode","CreateRoomView","root","dispatch","useDispatch","useSelector","useState","setLoading","roomForm","setRoomForm","selectedUserId","setSelectedUserId","userViews","setUserViews","searchedUsername","setSearchedUsername","removeSelf","useEffect","api","setMethod","setData","makeRequest","views","users","src","pic","get_user_views","onSubmit","room_image","room_name","user2_id","parseInt","formData","FormData","setHeaders","res","status","accept","onChange","UpdateProfileView","setUsername","setPassword","setName","setPic","getState","localStorage","removeItem","reload","Actions","alert","for","UserProfileView","UsersList","mode","heading","selectedUsers","setSelectedUsers","indexOf","idx","splice","group_id","room_id","margin","startsWith","onComplete","ImageView","height","connect","changeRoom","isTabletOrMobile","useMediaQuery","query","myState","handleRoomChange","removeUsersFromGroup","removed_users","addUsersToGroup","added_users","showUsersContainer","group_name","admin","user1","user2","img","class","showImage","right","zIndex","fontSize","ImageContainer","isScaled","image_container","handle_click","bind","handle_append_answer","main","setState","scaledContainer","event","remove_scaled_image_view","show_scaled_image_view","prompt","get_username","get_roomname","classes","Card","CardMedia","Paper","variant","CardContent","withStyles","media","paddingTop","FileContainer","filename","setProgress","setError","fileDataURL","setFileDataURL","onerror","onprogress","lengthComputable","loaded","total","fileToDataURL","LinearProgress","href","download","prototype","PropTypes","object","string","WebMessageHandler","get_client","get_user","onmessage","parse","obj","currentUser","msgbox","scrollTop","scrollHeight","chat","hasFocus","Notification","permission","requestPermission","notification","onclick","parent","showNotification","box","curHeight","clientHeight","belowHeight","empty","extension","unbind","confirm","search","open","answer","updated_message","current_message","update_message","createImage","Image","addEventListener","getRadianAngle","degreeValue","PI","imageSrc","pixelCrop","rotation","canvas","ctx","getContext","maxSize","max","safeArea","sqrt","translate","rotate","drawImage","getImageData","putImageData","x","y","toBlob","URL","createObjectURL","Photoshop","imageFile","messageApi","saturation","setSaturation","brightness","setBrightness","contrast","setContrast","grayScale","setGrayScale","sepia","setSepia","invert","setInvert","setImage","isCropping","setCropping","croppedArea","setCroppedArea","crop","setCrop","zoom","setZoom","updateImage","grayscale","filters","canvas_container","context","filter","closePhotoshop","fr","Slider","valueLabelDisplay","display","aspect","onCropChange","onZoomChange","onCropComplete","croppedAreaPercentage","croppedAreaPixels","getCroppedImg","croppedImageUrl","dataurl","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","dataURLtoFile","send_file_to_group","FileView","pop","myFileView","setFileView","fileType","filePath","FileUploadView","conversionText","setConversionText","is_image_file","to_text","direct_upload","ct","checked","du","send_image_text","progress_value","Room","useRef","setRoom","selected","setSelected","setMessageApi","messageBoxRef","close_connection","WebSocket","onopen","set_username","set_password","set_roomname","set_user","set_is_group","handle_message","onclose","current","new_room","updateWebsocketState","fetch_messages","makeDropZone","uploadFile","drawer","setDrawer","header","Login","loadingImages","isLoggedIn","isLoading","isError","errorMessage","handlePassword","handleUsername","handleSubmit","tryLocalLogin","uname","getItem","pass","loadImage","backgroundImage","setItem","inputEl","searchInput","to","React","Signup","confirmPassword","setConfirmPassword","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.137fd4bd.chunk.js","sourcesContent":["import { library, icon } from '@fortawesome/fontawesome-svg-core';\r\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons'\r\nlibrary.add(\r\n    faGoogle,\r\n    faArrowDown\r\n);\r\n\r\nexport const google_icon = icon({ prefix: 'fab', iconName: 'google' }).html;\r\n// export const arrow_down_icon = icon({ prefix: 'fas', iconName: 'faArrowDown' }).html;\r\n","import React from 'react'\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\n\r\nexport default function CodeView(props) {\r\n    let code = props.code;\r\n    let language = props.language;\r\n    let self = props.self;\r\n\r\n    return (\r\n        <SyntaxHighlighter language={ language }>\r\n            {code}\r\n        </SyntaxHighlighter>\r\n    )\r\n}\r\n","import $ from 'jquery'\r\nimport { google_icon } from './Icons'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CodeView from '../components/containers/CodeView'\r\n\r\nexport function getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function initializeLoadingScreen(classname) {\r\n    var loading_box = $(\".\" + classname);\r\n    for (var i = 1; i <= 20; i++){\r\n        var span = document.createElement('span');\r\n        span.setAttribute(\"style\", `--i:${i};`)\r\n        loading_box.append(span);\r\n    }\r\n}\r\n\r\n// Loading the messages from the server to the box\r\n\r\nexport function loadAllMessages(data) {\r\n    let selector = data.selector;\r\n    let messages = data.messages;\r\n    let currentUser = data.currentUser;\r\n    let currentRoom = data.currentRoom;\r\n    let msgbox = document.getElementById(selector);\r\n\r\n    if (msgbox) {\r\n        for (var i = 0; i < messages.length; i++) {\r\n            var message = messages[i];\r\n            if (toString(currentRoom) === toString(message.room)) {\r\n                if (message.user.id === currentUser.id) {\r\n                    appendMessageRight(selector, message, currentUser.name);\r\n                }\r\n                else {\r\n                    appendMessageLeft(selector, message, message.user.name);\r\n                }\r\n            }\r\n        }\r\n        msgbox.scrollTop = msgbox.scrollHeight;\r\n    } else {\r\n        alert(\"container for holding messages doesn't exists\")\r\n    }\r\n}\r\n\r\nexport function loadQuestionList(data, username, roomname) {\r\n    var messages = data['questions_list'];\r\n    var selector = \"questions_box\";\r\n    for (var i = 0; i < messages.length; i++) {\r\n        if (roomname === data['roomname']) {\r\n            if (data['username'] === username) {\r\n                appendMessageRight(selector, messages[i], data['username']);\r\n            }\r\n            else {\r\n                appendMessageLeft(selector, messages[i], data['username']);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchMessages(client, username, roomname) {\r\n    client.send(JSON.stringify({\r\n        'command': 'fetch_messages',\r\n        'username': username,\r\n        'roomname': roomname\r\n    }));\r\n}\r\n\r\n\r\n// Appending the updated messages from the user\r\n\r\nexport function updateMessage(message) {\r\n    let id = 'message_' + message.id;\r\n    let content = document.getElementById(id);\r\n    if (content == null) {\r\n        alert('message not exists');\r\n        return;\r\n    }\r\n    content.innerText = message.message;\r\n}\r\nexport function performScrollIfRequired(selector) {\r\n    let box = document.querySelector(\"#\" + selector);\r\n    let curHeight = box.scrollTop + box.clientHeight;\r\n    let belowHeight = box.scrollHeight - curHeight;\r\n    if (belowHeight < (2 * box.clientHeight)) {\r\n        box.scrollTop = box.scrollHeight;\r\n    }\r\n    console.log(\"current Height: \", curHeight);\r\n    console.log(\"below Height: \", belowHeight);\r\n}\r\n\r\nexport function appendMessageLeft(selector, message, username) {\r\n    let id = message.id;\r\n    var parentElement = document.querySelector(\"#\" + selector);\r\n    var div = document.createElement('div');\r\n    div.setAttribute('class', 'left_message_container');\r\n    \r\n    //adding username heading\r\n    var h = document.createElement('h4');\r\n    h.setAttribute('class', 'message_username');\r\n    h.setAttribute('align', 'center');\r\n    h.innerHTML = '<span id=\"username\">' + username + '</span>';\r\n    $(div).append(h);\r\n\r\n    //adding google search button\r\n    $(div).append(`<button id=\"google_search_button\" class=\"message_buttons\" value='${message.message}'\">${google_icon} Search on Google</button>`);\r\n    $(div).append(`<button id=\"copy_message_button\" class=\"message_buttons\" value='${message.message}'\"> Copy </button>`);\r\n\r\n    //adding message\r\n    var child = document.createElement('p');\r\n    child.setAttribute('class', 'left_message');\r\n    if (id != null) child.setAttribute('id', 'message_' + id);\r\n    \r\n    if (message.iscode) {\r\n        child.classList.add('code_message');\r\n        $(div).append(child);\r\n        parentElement.appendChild(div);\r\n        ReactDOM.render(<CodeView language=\"cpp\" code={message.message} self={child} />, child);\r\n    } else {\r\n        child.innerText = message.message;\r\n        $(div).append(child);\r\n        parentElement.appendChild(div);\r\n    }\r\n}\r\n\r\nexport function appendMessageRight(selector, message, username) {\r\n    let id = message.id;\r\n    var parentElement = document.querySelector(\"#\"+selector);\r\n\r\n    var div = document.createElement('div');\r\n    div.setAttribute('class', 'right_message_container');\r\n\r\n    //adding username header\r\n    var h = document.createElement('h4');\r\n    h.setAttribute('class', 'message_username');\r\n    h.setAttribute('align', 'center');\r\n    h.innerHTML = '<span id=\"username\">' + username + '</span>';\r\n    $(div).append(h);\r\n\r\n    //adding google search button\r\n    $(div).append(`<button class=\"message_buttons google_search_button\" value='${message.message}'\">${google_icon} Search on Google</button>`);\r\n    $(div).append(`<button class=\"message_buttons copy_message_button\" value='${message.message}'\"> Copy </button>`);\r\n\r\n    //adding message\r\n    var child = document.createElement('p');\r\n    child.setAttribute('class', 'right_message');\r\n    if (id != null) child.setAttribute('id', 'message_' + id);\r\n    console.log(message);\r\n    if (message.iscode) {\r\n        child.classList.add('code_message');\r\n        $(div).append(child);\r\n        parentElement.appendChild(div);\r\n        ReactDOM.render(<CodeView language=\"cpp\" code={message.message} self={child} />, child);\r\n    } else {\r\n        child.innerText = message.message;\r\n        $(div).append(child);\r\n        parentElement.appendChild(div);\r\n    }\r\n}\r\n\r\n\r\n// Adding the required events\r\n\r\nexport function addEvents(message_api, username, roomname) {\r\n    let client = message_api.get_client();\r\n    $('.copy_message_button').unbind(\"click\").bind(\"click\", function (e) {\r\n        let text = e.target.parentElement.innerText;\r\n        copyTextToClipboard(text);\r\n        window.confirm(\"Copied Successfully\")\r\n        return false;\r\n    })\r\n    $('.copy_message_button').unbind(\"click\").bind(\"click\", function (e) {\r\n        let text = e.target.parentElement.innerText;\r\n        copyTextToClipboard(text);\r\n        window.confirm(\"Copied Successfully\");\r\n        return false;\r\n    })\r\n    $('.google_search_button').unbind(\"click\").bind(\"click\", function (e) {\r\n        var text = e.target.value\r\n        var search = \"http://www.google.com/search?q=\" + text;\r\n        window.open(search, \"_blank\");\r\n    })\r\n\r\n    $('.right_message').unbind(\"click\").bind(\"click\", function () {\r\n        var answer = prompt('Enter Answer : ');\r\n        if (answer === null || answer === \"\") {\r\n            return;\r\n        }\r\n        else {\r\n            var updated_message = this.innerText + '\\nAnswer: ' + answer;\r\n            var current_message = this.innerText;\r\n            message_api.update_message(\r\n                {\r\n                    'command': 'update_message',\r\n                    'current_message': current_message,\r\n                    'updated_message': updated_message,\r\n                    'id': this.id,\r\n                    'username': username,\r\n                    'roomname': roomname\r\n                }\r\n            );\r\n        }\r\n\r\n    })\r\n    $(\".left_message\").unbind(\"click\").bind(\"click\", function (e) {\r\n        var answer = prompt('Enter Answer : ');\r\n        if (answer === null || answer === \"\") {\r\n            return;\r\n        }\r\n\r\n        var updated_message = this.innerText +'\\nAnswer: ' + answer;\r\n        var current_message = this.innerText;\r\n\r\n        message_api.update_message(\r\n            {\r\n                'command': 'update_message',\r\n                'current_message': current_message,\r\n                'updated_message': updated_message,\r\n                'id': this.id,\r\n                'username': username,\r\n                'roomname': roomname\r\n            }\r\n        );\r\n    })\r\n}\r\n\r\n// Showing the Notifications\r\nexport function fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n        var msg = successful ? 'successful' : 'unsuccessful';\r\n        console.log('Fallback: Copying text command was ' + msg);\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n        console.log('Async: Copying to clipboard was successful!');\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n\r\n","import React from 'react';\r\nimport {getCookie} from './utils/ChatMessage'\r\nexport var web_protocol = window.location.protocol; //either http: or https:\r\nexport var ws_protocol = web_protocol ==\"http:\" ? \"ws://\" : \"wss://\";\r\nexport var hostname = window.location.host == \"localhost:3000\" ? \"127.0.0.1:8000\" : window.location.host;\r\nexport var api_url = web_protocol + \"//\" + hostname;\r\nexport var websocket_url = ws_protocol + hostname + \"/chatroom/ws/\";\r\n\r\nvar csrftoken = getCookie('csrftoken');\r\nexport const CsrfToken = () => {\r\n    return (\r\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n    );\r\n};","import axios from 'axios';\r\nimport { api_url, hostname, ws_protocol } from '../global'\r\nimport {getCookie} from './ChatMessage'\r\nimport Push from 'push.js'\r\nimport $ from 'jquery';\r\n\r\n// < ---------------------------- functions implementations ---------------------------------->\r\n\r\n\r\nexport function toDataURL(file, callback) {\r\n\r\n    var reader = new FileReader();\r\n    reader.onload = function () {\r\n        var dataURL = reader.result;\r\n        callback(dataURL);\r\n    }\r\n    reader.readAsDataURL(file);\r\n}\r\n\r\nexport function dataUrlToFile(dataurl, filename) {\r\n    var arr = dataurl.split(',');\r\n    var mime = arr[0].match(/:(.*?);/)[1];\r\n    var bstr = atob(arr[1]);\r\n    var n = bstr.length;\r\n    var u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, { type: mime });\r\n}\r\n\r\nexport function convertToBase64(blobFile, callback) {\r\n    var fileToLoad = blobFile;\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function (fileLoadedEvent) {\r\n        let base64 = fileLoadedEvent.target.result;\r\n        callback(base64);\r\n    };\r\n    fileReader.readAsDataURL(fileToLoad);\r\n}\r\n\r\nexport function checkIfImageExists(url, callback) {\r\n    const img = new Image();\r\n\r\n    img.src = url;\r\n\r\n    if (img.complete) {\r\n        callback(true);\r\n    } else {\r\n        img.onload = () => {\r\n            callback(true);\r\n        };\r\n\r\n        img.onerror = () => {\r\n            callback(false);\r\n        };\r\n    }\r\n}\r\n\r\nexport function take_notification_permissions() {\r\n    if (!Notification) {\r\n        alert('Desktop Notification not available in your browser');\r\n        return;\r\n    }\r\n    if (Notification.permission != 'granted') {\r\n        Notification.requestPermission();\r\n        Push.Permission.get();\r\n    }\r\n}\r\n\r\nexport function showNotification(username, roomname, message) {\r\n    if (Notification.permission != 'granted')\r\n        Notification.requestPermission();\r\n    else {\r\n        var notification = new Notification(`Awesome Chatroom:\\n${roomname}<--${username}`, {\r\n            body: message,\r\n            icon: 'https://i.pinimg.com/originals/87/68/a6/8768a6b1df27243034f123988cfdb9d1.jpg'\r\n        });\r\n\r\n        notification.onclick = () => {\r\n            notification.close();\r\n            window.parent.focus();\r\n        }\r\n    }\r\n}\r\n\r\nexport async function makeDropZone(containerId, fileInputId, callback) {\r\n    // let container = dropzone.current.parentNode;\r\n\r\n    let container = document.getElementById(containerId);\r\n    let fileInputRef = document.getElementById(fileInputId);\r\n    $(container).off();\r\n\r\n    $(container).on('dragover', e => {\r\n        e.preventDefault(); // to stop the default behavior\r\n        container.classList.add('dropzone__over');\r\n    })\r\n\r\n\r\n    let dragoutListeners = ['dragleave', 'dragend'];\r\n    dragoutListeners.forEach(type => {\r\n        $(container).on((type), e => {\r\n            container.classList.remove('dropzone__over');\r\n        })\r\n    })\r\n\r\n    $(container).on('drop', e => {\r\n        e.preventDefault();\r\n        let files = e.originalEvent.dataTransfer.files;\r\n        if (files.length && fileInputRef) {\r\n            fileInputRef.files = files;\r\n            console.log(container,fileInputRef,files);\r\n            callback(container, files[0]);\r\n        }\r\n        container.classList.remove('dropzone__over');\r\n    })\r\n}\r\n\r\nexport function loadImage(src, callback) {\r\n    var image = new Image();\r\n    image.onload = function () {\r\n        callback(src);\r\n    }\r\n    image.src = src;\r\n}\r\n\r\nexport function loadImages(srcs, callback) {\r\n    let length = srcs.length;\r\n    let remaining = srcs.length;\r\n    for (let i = 0; i < length; i++) {\r\n        let src = srcs[i];\r\n        let image = new Image();\r\n        image.onload = function () {\r\n            remaining--;\r\n            if (remaining === 0) {\r\n                callback(srcs);\r\n            }\r\n        }\r\n        image.src = src\r\n    }\r\n}\r\n\r\n\r\n// < ---------------------- Classes Implementations --------------------->\r\n\r\nexport class ApiRequester{\r\n    constructor(username, password) {\r\n        this.username = username;\r\n        this.password = password;\r\n        this.method = null;\r\n        this.data = {};\r\n        this.body = {};\r\n        this.headers = { 'Content-Type': 'application/json', 'x-csrftoken': getCookie('csrftoken')};\r\n    }\r\n    \r\n    setData(data) {\r\n        this.data = data;\r\n    }\r\n    setBody(body) {\r\n        this.body = body;\r\n    }\r\n    setMethod(method) {\r\n        this.method = method;\r\n    }\r\n    setHeaders(headers) {\r\n        this.headers = headers;\r\n    }\r\n    \r\n    makeRequest(url) {\r\n        const ref = this;\r\n        if (ref.method && url && ref.username && ref.password) {\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                axios({\r\n                    method: ref.method,\r\n                    url: api_url+url,\r\n                    headers: ref.headers,\r\n                    data: ref.data,\r\n                    auth: {\r\n                        username: ref.username,\r\n                        password: ref.password\r\n                    },\r\n                    body: ref.body\r\n                    \r\n                }).then((response) => {\r\n                    resolve(response);\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                });\r\n            })\r\n        }\r\n        else {\r\n            return new Promise((resolve, reject) => {\r\n                reject('method, url, data, username and password required')\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport class MessageWebApi {\r\n    ws_protocol = ws_protocol\r\n    hostname = hostname\r\n\r\n    //roomname => room_id or group_id based upon the situtation it handles that.\r\n    constructor(client) {\r\n        this.api_url = api_url + '/';\r\n        this.client = client;\r\n        this.username = null\r\n        this.roomname = null\r\n        this.user = null;\r\n        this.active_users = [];\r\n        this.is_group = false;\r\n    }\r\n\r\n    set_is_group(is_group) {\r\n        this.is_group = is_group;\r\n    }\r\n\r\n    is_group() {\r\n        return this.is_group;\r\n    }\r\n\r\n    fetch_messages() {\r\n        if (this.client && this.username && this.password) {\r\n            this.send_message_to_room('fetch_messages', '');\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    update_message(data = { command: 'update_message', 'current_message': null, 'updated_message': null, 'id': null, 'username': null, 'roomname': null }) {\r\n        if (this.is_group == true) {\r\n            data['group_id'] = this.roomname;\r\n        }\r\n        this.client.send(JSON.stringify(data));\r\n    }\r\n\r\n    send_file_to_group(file, description, callback) {\r\n        const client = this.client;\r\n        var username = this.username\r\n        var roomname = this.roomname\r\n\r\n        let file_data = {\r\n            'command': 'new_file',\r\n            'filename': file.name,\r\n            'username': username,\r\n            'roomname': roomname,\r\n            'id': Date.now().toString(),\r\n        };\r\n\r\n        if (this.is_group) file_data['group_id'] = this.roomname;\r\n\r\n        if (file.name.endsWith('.pdf') || file.name.endsWith('.PDF')) {\r\n            convertToBase64(file, function (base64) {\r\n                file_data['dataURL'] = base64\r\n                client.send(JSON.stringify(file_data));\r\n                console.log(file_data);\r\n                callback(true);\r\n            });\r\n        }\r\n        else {\r\n            file_data['description'] = description;\r\n            toDataURL(file, function (dataURL) {\r\n                file_data['dataURL'] = dataURL;\r\n                client.send(JSON.stringify(file_data));\r\n                console.log(file_data);\r\n                callback(true);\r\n            })\r\n        }\r\n    }\r\n\r\n    async update_active_users() {\r\n        this.send_message_to_room('get_active_users', {});\r\n    }\r\n\r\n    send_image_text(image, callback, output) {\r\n        var Tesseract = window.Tesseract;\r\n        var ref = this;\r\n        Tesseract.recognize(image)\r\n            .progress(function (packet) {\r\n                callback(Math.round(packet.progress * 100))\r\n            })\r\n            .then(function (result) {\r\n                ref.send_message_to_room(\"new_message\", result.text);\r\n                output(true);\r\n            }).catch(function (err) {\r\n                output(false);\r\n            });\r\n    }\r\n\r\n    send_message_to_room(command, message) {\r\n        if (this.is_group == true) this.send_message_to_group(command, message);\r\n            \r\n        else {\r\n            this.client.send(JSON.stringify({\r\n                'command': command,\r\n                'message': message,\r\n                'username': this.username,\r\n                'roomname': this.roomname\r\n            }));\r\n        }\r\n    }\r\n\r\n    send_message_to_group(command, message) {\r\n        this.client.send(JSON.stringify({\r\n            'command': command,\r\n            'message': message,\r\n            'username': this.username,\r\n            'roomname': this.roomname,\r\n            'group_id': this.roomname,\r\n        }))\r\n    }\r\n\r\n    clear_room_messages(password) {\r\n        this.client.send(JSON.stringify({\r\n            'command': 'clear_room_messages',\r\n            'username': this.username,\r\n            'roomname': this.roomname,\r\n            'password': password\r\n        }));\r\n    }\r\n\r\n    get_token() {\r\n        let cookieValue = null,\r\n            name = \"csrftoken\";\r\n        if (document.cookie && document.cookie !== \"\") {\r\n            let cookies = document.cookie.split(\";\");\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) == (name + \"=\")) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    get_client() {\r\n        return this.client;\r\n    }\r\n    \r\n    get_messages() {\r\n        return this.messages;\r\n    }\r\n\r\n    get_response() {\r\n        return this.response;\r\n    }\r\n\r\n    get_room_messages(roomname) {\r\n        var messages = [];\r\n        this.messages.map(message => {\r\n            if (message.roomname === roomname)\r\n                messages.push(message);\r\n        })\r\n        return messages;\r\n    }\r\n\r\n    get_answered_messages() {\r\n        var answered_messages = []\r\n        this.messages.map(message => {\r\n            if (message.isanswer === true)\r\n                answered_messages.push(message);\r\n\r\n        })\r\n        return answered_messages;\r\n    }\r\n\r\n    set_roomname(roomname) {\r\n        this.roomname = roomname;\r\n    }\r\n\r\n    set_username(username) {\r\n        this.username = username\r\n    }\r\n\r\n    set_password(password) {\r\n        this.password = password;\r\n    }\r\n\r\n    set_user(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    get_user() {\r\n        return this.user;\r\n    }\r\n\r\n    get_roomname() {\r\n        return this.roomname;\r\n    }\r\n\r\n    get_username() {\r\n        return this.username;\r\n    }\r\n\r\n    get_hostnmae() {\r\n        return this.hostname;\r\n    }\r\n\r\n    get_ws_protocol() {\r\n        return this.ws_protocol;\r\n    }\r\n    close_connection() {\r\n        this.client.close();\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { BiError } from 'react-icons/bi'\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nexport class CustomBox extends Component {\r\n    boxName = this.props.boxName;\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let layout;\r\n        if (this.boxName == \"image_to_text_box\")\r\n            layout =\r\n                <div className=\"image_to_text_box\">\r\n                    <form id=\"image_to_text_form\">\r\n                        <div>\r\n                            <input className=\"image_to_text_inputs\" id=\"convert_to_text\" name=\"convert_to_text\" type=\"checkbox\"/>\r\n                            <label htmlFor=\"convert_to_text\">Convert To Text</label>\r\n                        </div>\r\n                        <div>\r\n                            <input className=\"image_to_text_inputs\" id=\"direct_upload\" name=\"direct_upload\" type=\"checkbox\" />\r\n                            <label htmlFor=\"upload_direct\">Direct Upload</label>\r\n                        </div>\r\n                        <div className=\"image_to_text_description\">\r\n                            <p>Image Description</p>\r\n                            <textarea className=\"image_to_text_textarea\" id=\"image_description\" placeholder=\"Enter Image Description here\" cols=\"50\"></textarea>\r\n                        </div>\r\n                        <div>\r\n                            <button\r\n                                id=\"upload_button\"\r\n                                className=\"image_to_text_button\"\r\n                                type=\"submit\"\r\n                                value=\"upload\"\r\n                                onClick={(e) => this.props.handler(e, { \"button\": \"upload\" })}\r\n                            >Upload</button>\r\n                            <button\r\n                                id=\"cancel_button\"\r\n                                className=\"image_to_text_button\"\r\n                                type=\"submit\"\r\n                                value=\"cancel\" \r\n                                onClick={(e) => this.props.handler(e, { \"button\": \"cancel\" })}\r\n                            >Cancel</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n        else if (this.boxName == 'progress_box')\r\n            layout =\r\n                <div className=\"progress_box\">\r\n                    <h2 id=\"progress_box_heading\" align=\"center\">{ this.props.text } ({this.props.progress+'%'})</h2>\r\n                    <div className=\"progress_line\" style={{width:this.props.progress+'%'}}></div>\r\n                </div>\r\n        else if (this.boxName == 'logout_box') {\r\n            layout =\r\n                <div className=\"logout_box\">\r\n                    <button id=\"logout_button\" onClick={this.props.logoutHandler}>Logout</button>\r\n                </div>\r\n        }\r\n        else if (this.boxName == 'error_box') {\r\n            if (this.props.hidden)\r\n                layout = <div></div>;\r\n            else\r\n                layout =\r\n                <div className=\"error_box\">\r\n                    <p className=\"error_box_message\">\r\n                        <span>\r\n                            <BiError size={25}/>\r\n                        </span>\r\n                        {this.props.error_message}\r\n                    </p>\r\n                </div>\r\n        }\r\n        else if (this.boxName == 'loader') {\r\n            if (this.props.hidden) return (<div> </div>);\r\n            else return (\r\n                <div className=\"absolute_center\">\r\n                    <CircularProgress size={70} />\r\n                    <h2>{this.props.message ? this.props.message : \"Please Wait Loading\"}</h2>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.boxName == 'info_box') {\r\n            let content = this.props.content;\r\n            let title = this.props.title;\r\n            let textColor = this.props.textColor;\r\n            layout =\r\n                <div id=\"info_box\" className=\"info_box\">\r\n                    <h3>{title}</h3>\r\n                <p style={{ color: textColor }}>{content}</p>\r\n                </div>\r\n        }\r\n        return (\r\n            <>\r\n                {layout}             \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomBox\r\n","//loading for home component it will be true when the rooms are being loaded from server.\r\nexport const updateLoading = (loading) => {\r\n    return {\r\n        type:'UpdateLoading',\r\n        payload: loading\r\n    }\r\n}\r\nexport const updateRooms = (groups_and_rooms) => {\r\n    let rooms_data = groups_and_rooms.rooms_data;\r\n    let groups_data = groups_and_rooms.groups_data;\r\n    let rooms = [];\r\n    groups_data.map(group => {\r\n        group['is_group'] = true;\r\n        rooms.push(group);\r\n    });\r\n    rooms_data.map(room => {\r\n        room['is_group'] = false;\r\n        rooms.push(room);\r\n    });\r\n    return {\r\n        type: 'UpdateRooms',\r\n        payload: rooms\r\n    }\r\n}\r\nexport const updateError = (error) => {\r\n    return {\r\n        type: 'UpdateError',\r\n        payload: error\r\n    }\r\n}\r\nexport const updateCurrentRoom = (room) => {\r\n    return {\r\n        type: 'UpdateCurrentRoom',\r\n        payload: room\r\n    }\r\n}\r\nexport const updateUsername = (username) => {\r\n    return {\r\n        type: 'UpdateUsername',\r\n        payload: username\r\n    }\r\n}\r\nexport const updatePassword = (password) => {\r\n    return {\r\n        type: 'UpdatePassword',\r\n        payload: password\r\n    }\r\n}\r\nexport const updateState = (state) => {\r\n    return {\r\n        type: 'UpdateState',\r\n        payload: state\r\n    }\r\n}\r\nexport const updateMessageApi = (message_api) => {\r\n    return {\r\n        'type': 'UpdateMessageApi',\r\n        payload: message_api\r\n    }\r\n}\r\nexport const updateUser = (user) => {\r\n    return {\r\n        type: 'UpdateUser',\r\n        payload: user\r\n    }\r\n}\r\nexport const updateRoomLoading = (loading) => {\r\n    return {\r\n        type: 'UpdateRoomLoading',\r\n        payload: loading\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { changeRoomEvent } from \"./actions\"\r\nimport axios from 'axios';\r\nimport {createReducer} from '@reduxjs/toolkit'\r\n\r\nexport const initialRoomState = {\r\n    rooms: [],\r\n    loading: false,\r\n    error: null,\r\n    message_api: null,\r\n}\r\n\r\nconst roomState = {\r\n    loading: false,\r\n    currentRoom: null\r\n}\r\nconst userData = {\r\n    username: '',\r\n    password: '',\r\n    user: null\r\n}\r\n\r\nconst userDataReducer = createReducer(userData, (builder) => {\r\n    builder.addCase('UpdateUsername', (state, action) => {\r\n        state.username = action.payload;\r\n    })\r\n    builder.addCase('UpdatePassword', (state, action) => {\r\n        state.password = action.payload;\r\n    })\r\n    builder.addCase('UpdateUser', (state, action) => {\r\n        state.user = action.payload;\r\n    })\r\n});\r\n\r\nconst navigationStateReducer = createReducer(initialRoomState, (builder) => {\r\n    builder.addCase('UpdateRooms', (state, action) => {\r\n        state.rooms = action.payload;\r\n    })\r\n    builder.addCase('UpdateLoading', (state, action) => {\r\n        state.loading = action.payload;\r\n    })\r\n    builder.addCase('UpdateError', (state, action) => {\r\n        state.error = action.payload;\r\n    })\r\n    builder.addCase('UpdateState', (state, action) => {\r\n        state.state = action.payload;\r\n    })\r\n    builder.addCase('UpdateMessageApi', (state, action) => {\r\n        state.message_api = action.payload;\r\n    })\r\n})\r\n\r\nconst roomStateReducer = createReducer(roomState, (builder) => {\r\n    builder.addCase('UpdateRoomLoading', (state, action) => {\r\n        state.roomLoading = action.payload;\r\n    })\r\n    builder.addCase('UpdateCurrentRoom', (state, action) => {\r\n        state.currentRoom = action.payload;\r\n    })\r\n})\r\n\r\nconst rootReducer = combineReducers({\r\n    roomNavState: navigationStateReducer,\r\n    roomState: roomStateReducer,\r\n    userData: userDataReducer,\r\n});\r\n\r\nexport default rootReducer;","import rootReducer, { initialRoomState} from './reducers'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    preloadedState: initialRoomState\r\n})\r\n\r\n// const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nexport default store;","import $ from 'jquery'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {CustomBox} from '../../components/containers/CustomBox'\r\n\r\nexport function show_image_to_text_box() {\r\n    $(\".image_to_text_box\").css({\r\n        'visibility': 'visible',\r\n    })\r\n}\r\n\r\nexport function display_questions_box_items_at_start() {\r\n    $(\"#questions_box\").css({\r\n        'align-items': 'initial',\r\n        'justify-content':'initial'\r\n    })\r\n}\r\n\r\nexport function hide_image_to_text_box() {\r\n    $(\".image_to_text_box\").css({\r\n        'visibility': 'hidden'\r\n    })\r\n}\r\n\r\nexport function show_loading_screen() {\r\n    $(\".loading\").css({\r\n        'visibility': 'visible'\r\n    })\r\n}\r\n\r\nexport function hide_loading_screen() {\r\n    $(\".loading\").fadeOut('fast');\r\n}\r\n\r\nexport function show_progress_box() {\r\n    $('.progress_box').css({\r\n        'visibility':'visible'\r\n    })\r\n}\r\n\r\nexport function hide_progress_box() {\r\n    $('.progress_box').css({\r\n        'visibility': 'hidden'\r\n    })\r\n}\r\n\r\nexport function show_info(data = {title:'', content:'', color:'', time:0}) {\r\n    let title = data.title;\r\n    let content = data.content;\r\n    let color = data.textColor ? data.textColor : data.color;\r\n    let time = data.time;\r\n    let body = document.getElementsByTagName('body')[0];\r\n    let div = document.createElement('div');\r\n    body.appendChild(div);\r\n\r\n    ReactDOM.render(\r\n        <CustomBox\r\n            boxName=\"info_box\"\r\n            title={title}\r\n            content={content}\r\n            textColor={ color ? color : '' }\r\n        />, div\r\n    )\r\n    setTimeout(() => {\r\n        ReactDOM.unmountComponentAtNode(div);\r\n        div.remove();\r\n    }, time*1000);\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ReactDOM from 'react-dom'\r\nimport { ApiRequester } from '../../utils/utils'\r\nimport {show_info} from '../../styles/js/AlterCSS'\r\nimport { api_url } from '../../global'\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { ImCross } from 'react-icons/im'\r\nimport {updateRooms} from '../../redux/actions'\r\n\r\nexport default function CreateRoomView(props) {\r\n    let self = props.self;\r\n    let root = document.getElementById('root');\r\n    let dispatch = useDispatch();\r\n    let userData = useSelector(state => state.userData);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [roomForm, setRoomForm] = useState(false);\r\n    const [selectedUserId, setSelectedUserId] = useState('');\r\n    const [userViews, setUserViews] = useState([]);\r\n    const [searchedUsername, setSearchedUsername] = useState('');\r\n\r\n    function get_user_views(users) {\r\n        let views = [];\r\n        for (let i = 0; i < users.length; i++) {\r\n            views.push(\r\n                <div\r\n                    id={\"user_\" + users[i].id}\r\n                    key={\"user_\" + users[i].id}\r\n                    className=\"create_room_profileview user_profile_container\"\r\n                    onClick={(e) => {\r\n                        setRoomForm(true);\r\n                        setSelectedUserId(e.target.id);\r\n                    }}\r\n                >\r\n                    <div className=\"create_room_profileview__image user_profile__image\">\r\n                        <img src={users[i].pic != null && users[i].pic != '' ? api_url + users[i].pic : 'https://www.kindpng.com/picc/m/24-248253_user-profile-default-image-png-clipart-png-download.png'} />\r\n                    </div>\r\n                    <p id={\"user_\" + users[i].id} className=\"create_room_profileview__p user_profile__p\">{users[i].name}</p>\r\n                </div>\r\n            )\r\n        }\r\n        return views;\r\n    }\r\n\r\n    function createRoom(e) {\r\n        setLoading(true);\r\n        e.preventDefault();\r\n        let room_image = e.target.room_image.files[0];\r\n        let room_name = e.target.room_name.value;\r\n        let user2_id = selectedUserId;\r\n        console.log(room_image);\r\n        //user_1\r\n        user2_id = user2_id.substring(5, selectedUserId.length);\r\n        user2_id = parseInt(user2_id);\r\n\r\n        let formData = new FormData();\r\n        formData.append('room_name', room_name);\r\n        formData.append('user2_id', user2_id);\r\n        formData.append('room_image', room_image);\r\n        \r\n        let api = new ApiRequester(userData.username, userData.password);\r\n        api.setMethod('POST');\r\n        api.setData(formData);\r\n        api.setHeaders({'Content-Type':'multipart/form-data'});\r\n        api.makeRequest('/api/chat/command/create_room/').then((response) => {\r\n            let res = response.data;\r\n            if (res.status == true) {\r\n                dispatch(updateRooms(res.data));\r\n                setLoading(false);\r\n                show_info({\r\n                    title: 'Room',\r\n                    content: 'Room created successfully',\r\n                    color: 'green',\r\n                    time: 4\r\n                })\r\n                removeSelf();\r\n            }\r\n            else {\r\n                show_info({\r\n                    title: 'Room',\r\n                    content: res.error,\r\n                    color: 'red',\r\n                    time: 4\r\n                })\r\n                setLoading(false);\r\n            }\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        let api = new ApiRequester(userData.username, userData.password);\r\n        api.setMethod('POST')\r\n        api.setData({ 'username': searchedUsername })\r\n        api.makeRequest('/api/chat/search_user/').then((response) => {\r\n            let views = get_user_views(response.data.data);\r\n            setUserViews(views);\r\n            setLoading(false);\r\n        }).catch((error) => {\r\n            setLoading(false);\r\n        })\r\n    }, [searchedUsername]);\r\n\r\n    function removeSelf(e) {\r\n        root.classList.remove('blur');\r\n        ReactDOM.unmountComponentAtNode(self);\r\n        self.remove();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {root.classList.add('blur')}\r\n            <div className=\"update_profile__cancel\" onClick={removeSelf}>\r\n                <ImCross />\r\n            </div>\r\n            {!roomForm ?\r\n                <div>\r\n                    <div className=\"user_search_container\">\r\n                        <input id=\"user_search__input\" type=\"text\" placeholder=\"Search for users..\" value={searchedUsername} onChange={(e) => { setSearchedUsername(e.target.value); }} />\r\n                    </div>\r\n                    {loading ?\r\n                        <div className=\"flex_center_row\">\r\n                            <CircularProgress />\r\n                        </div>\r\n                        :\r\n                        <div className=\"user_search__list\">\r\n                            {userViews}\r\n                        </div>\r\n                    \r\n                    }\r\n                </div>\r\n                :\r\n                <div>\r\n                    <form className=\"create_room__form\" onSubmit={createRoom}>\r\n                        <label htmlFor='input_room_name'>Enter Room Name</label>\r\n                        <input className=\"create_room__form__input\" name=\"room_name\" id=\"input_room_name\" type='text' placeholder=\"Enter room name ...\" />\r\n\r\n                        <label htmlFor='input_room_image'>Select Room Picture</label>\r\n                        <input id=\"input_room_image\" className=\"create_room__form__input\" accept=\"image/*\" name=\"room_image\" type=\"file\" />\r\n                        \r\n                        <input className=\"create_room__form__button\" type=\"submit\" value=\"Create Room\" />\r\n                    </form>\r\n                    {loading ?\r\n                        <div className=\"flex_center_row\">\r\n                            <CircularProgress />\r\n                        </div>\r\n                    : null}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React,{useEffect, useState} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ImCross } from 'react-icons/im'\r\nimport { BsPlus } from 'react-icons/bs'\r\nimport { ApiRequester } from '../../utils/utils'\r\nimport store from '../../redux/store'\r\nimport { Provider, useDispatch, useSelector } from 'react-redux'\r\nimport { show_info } from '../../styles/js/AlterCSS'\r\nimport * as Actions from '../../redux/actions'\r\nimport { api_url } from '../../global'\r\nimport CreateRoomView from '../popup/CreateRoomView'\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nfunction UpdateProfileView(props) {\r\n    let user = props.user;\r\n    let self = props.self;\r\n    let root = document.getElementById('root');\r\n\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [name, setName] = useState('');\r\n    const [pic, setPic] = useState(null);\r\n\r\n    function updateProfile(e) {\r\n        setLoading(true);\r\n        if (name || pic) {\r\n            let formData = new FormData();\r\n            formData.append('newname', name);\r\n            formData.append('pic', pic);\r\n            let api = new ApiRequester(username, password);\r\n            api.setMethod('post');\r\n            api.setData(formData);\r\n            api.makeRequest('/api/chat/user/updateprofile/').then((response) => {\r\n                let res = response.data;\r\n                if (res.status == true) {\r\n                    show_info({\r\n                        title: 'Profile',\r\n                        content: 'Profile Updated Successfully',\r\n                        time: 2,\r\n                        textColor:'green'\r\n                    })\r\n                    dispatch(Actions.updateUser(res.data.user));\r\n                    removeSelf(e);\r\n                }\r\n                else {\r\n                    show_info({\r\n                        title: 'Failed',\r\n                        content: 'Failed to Update',\r\n                        time: 2,\r\n                        textColor:'red'\r\n                    })\r\n                }\r\n                setLoading(false);\r\n            });\r\n        }\r\n        else {\r\n            alert(\"You can't leave any field empty\");\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    function removeSelf(e) {\r\n        root.classList.remove('blur');\r\n        ReactDOM.unmountComponentAtNode(self);\r\n        self.remove();\r\n    }\r\n\r\n    function logout(e) {\r\n        localStorage.removeItem('username');\r\n        localStorage.removeItem('password');\r\n        window.location.reload();\r\n    }\r\n    \r\n    useEffect(() => {\r\n        let data = store.getState().userData;\r\n        setUsername(data.username);\r\n        setPassword(data.password);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {root.classList.add('blur')}\r\n            <div className=\"update_profile__cancel\" onClick={removeSelf}>\r\n                <ImCross />\r\n            </div>\r\n            <div className=\"update_profile__header\">\r\n                <img src={user.pic ? api_url+user.pic : 'https://www.kindpng.com/picc/m/24-248253_user-profile-default-image-png-clipart-png-download.png'} />\r\n                <h3 align=\"center\">{user.name}</h3>\r\n                <button className=\"update_profile__header_button\" onClick={ logout }>Logout</button>\r\n            </div>\r\n            <form className=\"update_profile__form\" onSubmit={updateProfile}>\r\n                <input id={\"user_name_input\" + user.id} placeholder=\"Enter new name...\" name=\"username\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n                <label for={\"user_pic_input\" + user.id}>Edit Profile Picture</label>\r\n                <input id={\"user_pic_input\" + user.id} type=\"file\" name=\"picture\" onChange={(e) => setPic(e.target.files[0]) }/>\r\n                <input type=\"submit\" value=\"Update\" />\r\n            </form>\r\n            {loading ?\r\n                <div className=\"flex_center_row\">\r\n                    <CircularProgress size={50} />\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function UserProfileView(props) {\r\n    let userData = useSelector((state) => state.userData);\r\n    let user = userData.user;\r\n    let username = userData.username;\r\n    \r\n    function handleOpen(e) {\r\n        let div = document.createElement('div');\r\n        div.id = 'update_profile_' + user.id;\r\n        div.classList.add('absolute_center');\r\n        document.body.appendChild(div);\r\n        ReactDOM.render(\r\n            <Provider store={store}>\r\n                <UpdateProfileView self={div} user={user} />\r\n            </Provider>, div\r\n        );\r\n        div.classList.add('update_profile_container');\r\n    }\r\n    \r\n    function handleCreateRoom(e) {\r\n        let div = document.createElement('div');\r\n        div.id = 'create_roomm_' + user.id;\r\n        div.classList.add('absolute_center');\r\n        document.body.appendChild(div);\r\n        ReactDOM.render(\r\n            <Provider store={store}>\r\n                <CreateRoomView self={div} user={user}/>\r\n            </Provider>, div\r\n        );\r\n        div.classList.add('create_room_container');\r\n    }\r\n\r\n    if (!user) {\r\n        return (\r\n            <h2>No User Specified</h2>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"user_profile_container\">\r\n            <div className=\"user_profile__image\" onClick={handleOpen}>\r\n                <img id={'user_image_' + user.id} src={user.pic != null && user.pic != '' ? api_url+user.pic : 'https://www.kindpng.com/picc/m/24-248253_user-profile-default-image-png-clipart-png-download.png'} />\r\n            </div>\r\n            <div>\r\n                <p className=\"user_profile__p\">{user.name}</p>\r\n                <p>{ username }</p>\r\n            </div>\r\n            <div className=\"user_profile__addroom\" onClick={handleCreateRoom}>\r\n                <BsPlus size={ 20 }/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { ApiRequester } from '../../utils/utils'\r\nimport ReactDOM from 'react-dom';\r\nimport { api_url } from '../../global';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport { ImCross } from 'react-icons/im'\r\nimport {getCookie} from '../../utils/ChatMessage'\r\n\r\nexport default function UsersList(props) {\r\n    let self = props.self;\r\n    let mode = props.mode;\r\n    let heading = props.heading;\r\n    if (heading == null || heading == \"\") {\r\n        heading = \"User List\"\r\n    }\r\n\r\n    let userData = useSelector(state => state.userData);\r\n\r\n    const [userViews, setUserViews] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [searchedUsername, setSearchedUsername] = useState('');\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n\r\n    function selectionComplete() {\r\n        let group_id = self.id;\r\n        //user_list_container_\r\n        if (group_id.startsWith('user_list_container_')) group_id = group_id.substring(20, group_id.length);\r\n        props.onComplete(selectedUsers, group_id);\r\n        removeSelf();\r\n    }\r\n\r\n    function removeSelf() {\r\n        ReactDOM.unmountComponentAtNode(self);\r\n        self.remove();\r\n    }\r\n\r\n    function get_user_views(users) {\r\n        let views = [];\r\n        for (let i = 0; i < users.length; i++) {\r\n            views.push(\r\n                <div\r\n                    id={\"user_\" + users[i].id}\r\n                    key={\"user_\" + users[i].id}\r\n                    className={\r\n                        selectedUsers.indexOf(users[i].id) == -1 ?\r\n                            \"create_room_profileview user_profile_container\"\r\n                            :\r\n                            \"create_room_profileview user_profile_container black\"\r\n                    }\r\n                    onClick={(e) => {\r\n                        let users = selectedUsers;\r\n                        let idx = users.indexOf(e.target.id);\r\n                        if (idx != -1) {\r\n                            users.splice(idx, 1);\r\n                            e.target.style.color = 'black';\r\n                        } else {\r\n                            e.target.style.color = 'green';\r\n                            users.push(e.target.id);\r\n                        }\r\n                        setSelectedUsers(users);\r\n                    }}\r\n                >\r\n                    <div className=\"create_room_profileview__image user_profile__image\">\r\n                        <img src={users[i].pic != null && users[i].pic != '' ? api_url + users[i].pic : 'https://www.kindpng.com/picc/m/24-248253_user-profile-default-image-png-clipart-png-download.png'} />\r\n                    </div>\r\n                    <p id={\"user_\" + users[i].id} className=\"create_room_profileview__p user_profile__p\">{users[i].name}</p>\r\n                </div>\r\n            )\r\n        }\r\n        return views;\r\n    }\r\n\r\n    useEffect(() => {\r\n        let api = new ApiRequester(userData.username, userData.password);\r\n        if (mode == \"add_users\" || mode == \"remove_users\" || mode == \"add_user\" || mode == \"remove_user\") {\r\n            setLoading(true);\r\n            api.setMethod('POST')\r\n            api.setData({ 'username': searchedUsername })\r\n            api.makeRequest('/api/chat/search_user/').then((response) => {\r\n                let views = get_user_views(response.data.data);\r\n                setUserViews(views);\r\n                setLoading(false);\r\n            }).catch((error) => {\r\n                setLoading(false);\r\n            })\r\n\r\n        } else if (mode == \"show_users\") {\r\n            setLoading(true);\r\n            let api = new ApiRequester(userData.username, userData.password);\r\n            api.setMethod('POST');\r\n            if (props.group_id) api.setData({ 'group_id': props.group_id });\r\n            else if (props.room_id) api.setData({ 'room_id': props.room_id });\r\n\r\n            api.makeRequest('/api/chat/command/get_users_by_group_id/').then((response) => {\r\n                console.log(response.data);\r\n                let views = get_user_views(response.data.data);\r\n                setUserViews(views);\r\n                setLoading(false);\r\n            }).catch((error) => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }, [searchedUsername]);\r\n\r\n    return (\r\n        <>\r\n            <h2 align=\"center\" style={{ color: \"white\", margin:\"5px\"}}>{heading}</h2>\r\n            <div className=\"update_profile__cancel\" onClick={removeSelf}>\r\n                <ImCross />\r\n            </div>\r\n            {mode==\"add_users\" || mode == \"remove_users\" ?\r\n                <div className=\"user_search_container\">\r\n                    <input id=\"user_search__input\" type=\"text\" placeholder=\"Search for users..\" value={searchedUsername} onChange={(e) => setSearchedUsername(e.target.value)} />\r\n                    <button onClick={selectionComplete}>Select Users</button>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n            {loading ?\r\n                <div className=\"flex_center_row\">\r\n                    <CircularProgress />\r\n                </div>\r\n                :\r\n                <div className=\"user_search__list\">\r\n                    {userViews}\r\n                </div>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ImCross } from 'react-icons/im'\r\n\r\nexport default function ImageView(props) {\r\n    let src = props.src;\r\n    let image = props.image;\r\n    let self = props.self;\r\n    let height = props.height;\r\n    let width = props.width;\r\n    \r\n    function removeSelf() {\r\n        ReactDOM.unmountComponentAtNode(self);\r\n        self.remove();\r\n    }\r\n\r\n    return (\r\n        <div className=\"image_view absolute_center\" style={ {width: width, height: height}}>\r\n            <div className=\"cancel_button\" onClick={removeSelf}>\r\n                <ImCross />\r\n            </div>\r\n            <img src={ image ? image.src : src }/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { api_url } from '../../global'\r\nimport {useSelector, useDispatch, connect} from 'react-redux'\r\nimport { BsPlus } from 'react-icons/bs'\r\nimport { MdDelete } from 'react-icons/md'\r\nimport { BiShow } from 'react-icons/bi';\r\nimport UserProfileView from './UserProfileView'\r\nimport ReactDOM from 'react-dom'\r\nimport UsersList from '../popup/UsersList'\r\nimport store from '../../redux/store'\r\nimport { Provider } from 'react-redux'\r\nimport { ApiRequester } from '../../utils/utils'\r\nimport { show_info } from '../../styles/js/AlterCSS';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport ImageView from '../containers/ImageView' \r\n\r\nfunction RoomNavigation(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 800px)' })\r\n    //These Room are Updated By Home Component\r\n    const userData = useSelector(state => state.userData);\r\n\r\n    const myState = useSelector(state => state.roomNavState);\r\n\r\n    // const classes = makeStyles(homeStyles)();\r\n\r\n    function handleRoomChange(e, room_id = null) {\r\n        if (e.target.className == \"roomcard__image\") return;\r\n        dispatch({ type: 'UpdateCurrentRoom', payload: room_id ? room_id : e.target.id });\r\n    }\r\n\r\n    function removeUsersFromGroup(selectedUsers, group_id) {\r\n        let api = new ApiRequester(userData.username, userData.password);\r\n        api.setMethod('POST');\r\n        api.setData({ users: selectedUsers, group_id: group_id });\r\n        api.makeRequest('/api/chat/command/remove_users_from_group/')\r\n            .then((response) => {\r\n                let res = response.data;\r\n                if (res.status == true) {\r\n                    if (res.removed_users.length > 0) show_info({ title: 'Users', content: 'Selected Users Deleted Successfully', color: 'green', time: 5 })\r\n                    else show_info({ title: 'Users', content: 'Selected Users Not Exists In Group', color: 'green', time: 5 })\r\n                } else {\r\n                    show_info({ title: 'Users', content: res.error, color: 'red', time: 5 })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                show_info({ title: 'Users', content: 'something wrong happened', color: 'red', time: 5 })\r\n            })\r\n    }\r\n\r\n    function addUsersToGroup(selectedUsers, group_id) {\r\n        let api = new ApiRequester(userData.username, userData.password);\r\n        api.setMethod('POST');\r\n        api.setData({ users: selectedUsers, group_id: group_id });\r\n        api.makeRequest('/api/chat/command/add_users_to_group/')\r\n            .then((response) => {\r\n                let res = response.data;\r\n                if (res.status == true) {\r\n                    if(res.added_users.length > 0) show_info({ title: 'Users', content: 'Selected Users Added Successfully', color: 'green', time: 5 })\r\n                    else show_info({ title: 'Users', content: 'Selected Users Already Exists In Group', color: 'green', time: 5 })\r\n                } else {\r\n                    show_info({ title: 'Users', content: res.error, color: 'red', time: 5 })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                show_info({ title: 'Users', content: error, color: 'red', time: 5 })\r\n            })\r\n    }\r\n\r\n    function showUsersContainer(e, mode, room_id=null) {\r\n        let body = document.getElementsByTagName('body')[0];\r\n        let div = document.createElement('div');\r\n        div.id = 'user_list_container_'+ room_id ? room_id : e.target.id;\r\n        div.className = \"user_list_container absolute_center flex_center_column\";\r\n        body.appendChild(div);\r\n\r\n        if (mode == \"add_user\") {\r\n            ReactDOM.render(\r\n                <Provider store={store}>\r\n                    <UsersList\r\n                        heading=\"Add Users To Group\"\r\n                        mode=\"add_users\"\r\n                        onComplete={addUsersToGroup}\r\n                        self={div}\r\n                    />\r\n                </Provider>,\r\n                div);\r\n        } else if (mode == \"remove_user\") {\r\n            ReactDOM.render(\r\n                <Provider store={store}>\r\n                    <UsersList\r\n                        heading=\"Remove Users From Group\"\r\n                        mode=\"remove_users\"\r\n                        onComplete={removeUsersFromGroup}\r\n                        self={div}\r\n                    />\r\n                </Provider>,\r\n                div);\r\n        } else if (mode == \"show_group_users\") {\r\n            ReactDOM.render(\r\n                <Provider store={store}>\r\n                    <UsersList\r\n                        heading=\"List of Users in Group\"\r\n                        mode=\"show_users\"\r\n                        group_id={room_id}\r\n                        self={div} />\r\n                </Provider>,\r\n                div);\r\n        }\r\n    }\r\n\r\n    function showImage(img, src=null) {\r\n        let div = document.createElement('div');\r\n        div.class = \"relative\";\r\n        div.id = \"image_view_\" + img.id;\r\n        let body = document.getElementsByTagName(\"body\")[0];\r\n        body.appendChild(div);\r\n        ReactDOM.render(<ImageView self={div} image={img ? img : src} />, div);\r\n    }\r\n\r\n    let data = [];\r\n    let rooms = myState.rooms;\r\n    //if mystate.loading is true that means the available rooms being fetched from server. \r\n    //You can see the implementation of this in Home Component.\r\n    if (!myState.loading) {\r\n        for (let i = 0; i < rooms.length; i++) {\r\n            if (rooms[i].is_group) {\r\n                data.push(\r\n                    <div key={'group_' + rooms[i].id} className=\"roomcard group lightblue\">\r\n                        <div onClick={e => handleRoomChange(e, 'group_'+rooms[i].id)}>\r\n                            <div className=\"group_card_conntainer\">\r\n                                <img\r\n                                    id={ 'group_card_image_' + rooms[i].id}\r\n                                    src={rooms[i].image != null && rooms[i].image != '' ? api_url + rooms[i].image : 'https://www.kindpng.com/picc/m/24-248253_user-profile-default-image-png-clipart-png-download.png'}\r\n                                    className=\"roomcard__image\"\r\n                                    onClick={e => handleRoomChange(e, 'group_'+rooms[i].id)}\r\n                                />\r\n                            </div>\r\n                            <p id={'group_' + rooms[i].id} className=\"roomcard__p\">{rooms[i].group_name}</p>\r\n                        </div>\r\n                        {rooms[i].admin == userData.user.id ?\r\n                            <div id={rooms[i].id} className=\"flex_center_column group_action_button_container\">\r\n                                <div id={rooms[i].id} className=\"group_plus_user_icon group_action_button\" onClick={e => showUsersContainer(e, \"add_user\", rooms[i].id)}>\r\n                                    {isTabletOrMobile ? null : \"Add Users\"} <BsPlus size={20} />\r\n                                </div>\r\n                                <div id={rooms[i].id} className=\"group_delete_user_icon group_action_button\" onClick={e => showUsersContainer(e, \"remove_user\", rooms[i].id)}>\r\n                                    {isTabletOrMobile ? null : \"Delete Users\"} <MdDelete size={20} />\r\n                                </div>\r\n                                <div id={rooms[i].id} className=\"group_delete_user_icon group_action_button\" onClick={e => showUsersContainer(e, \"show_group_users\", rooms[i].id)}>\r\n                                    {isTabletOrMobile ? null : \"Show Users\"} <BiShow size={20} />\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                );\r\n            } else {\r\n                let user = userData.user.id == rooms[i].user1.id ? rooms[i].user2 : rooms[i].user1;\r\n                data.push(\r\n                    <div key={'room_card_container_'+rooms[i].id} id={'room_card_container_' + rooms[i].id} className=\"roomcard relative\" onClick={e => handleRoomChange(e, 'room_' + rooms[i].id)}>\r\n                        <div id={'room_' + rooms[i].id} className=\"room_card_image_container\">\r\n                            <img\r\n                                src={user.pic != null && user.pic != '' ? api_url + user.pic : 'https://www.kindpng.com/picc/m/24-248253_user-profile-default-image-png-clipart-png-download.png'}\r\n                                className=\"roomcard__image\"\r\n                                onClick={(e) => {\r\n                                    let image = e.target;\r\n                                    showImage(image);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <p id={'room_name_' + rooms[i].id} className=\"roomcard__p\">{rooms[i].room_name} </p>\r\n                        <p style={{ position: 'absolute', top: 1, right: 1, zIndex: 1, fontSize: \"20px\", color:\"green\" }}>{user.name}</p>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"roomlistheader\">\r\n                <UserProfileView />\r\n            </div>\r\n            <div className=\"roomcontainer__list__searchbox\">\r\n                <input placeholder=\"Search room here...\" className=\"search_input\" type=\"text\" />\r\n            </div>\r\n            {data}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    roomState: state.changeRoom\r\n});\r\n\r\nexport default connect(mapStateToProps)(RoomNavigation)","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport $ from 'jquery';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {imageStyles} from '../../styles/js/ChatStyles'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport class ImageContainer extends Component {\r\n\r\n    message_api = this.props.message_api;\r\n    id  = this.props.id;\r\n    src = this.props.src;\r\n\r\n    state = {\r\n        isScaled: false,\r\n        content: this.props.content\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.image_container = $(\"#image_container_\" + this.id);\r\n        this.handle_click = this.handle_click.bind(this);\r\n        this.handle_append_answer = this.handle_append_answer.bind(this);\r\n    }\r\n\r\n    show_scaled_image_view(main) {\r\n        let image =\r\n            <>\r\n                <div className=\"image_button_container\">\r\n                    <button className=\"image_buttons\" onClick={this.handle_append_answer}>\r\n                        Append Answer\r\n                    </button>\r\n                    <button className=\"image_buttons\" onClick={this.handle_click}>\r\n                        Close Image\r\n                    </button>\r\n                </div>\r\n                <img\r\n                    id={\"scaled_image_\" + this.id}\r\n                    src={this.src}\r\n                />\r\n            </>\r\n        var div = document.createElement(\"div\");\r\n        div.id = \"scaled_image_container_\" + this.id;\r\n        div.className = \"show_scaled_image\";\r\n        $('body').append(div);\r\n        this.setState({\r\n            scaledContainer:div\r\n        })\r\n        ReactDOM.render(image, div);\r\n        this.setState({\r\n            isScaled: true\r\n        })\r\n    }\r\n\r\n    remove_scaled_image_view(main) {\r\n        var container = document.getElementById(\"scaled_image_container_\" + this.id);\r\n        container.remove();\r\n        this.setState({\r\n            isScaled: false\r\n        })\r\n    }\r\n\r\n    handle_click(event) {\r\n        var main = document.getElementById('QuestionViewContainer');\r\n        if (this.state.isScaled) {\r\n            this.setState({\r\n                isScaled: false\r\n            })\r\n            this.remove_scaled_image_view(main);\r\n        }\r\n        else {\r\n            this.show_scaled_image_view(main);\r\n        }\r\n    }\r\n\r\n    handle_append_answer(event) {\r\n        var value = window.prompt(\"Enter Answer :\");\r\n        if (value == null || value == \"\") return;\r\n        else {\r\n            var data = {\r\n                'id': \"image_\"+this.id,\r\n                'message': value,\r\n                'username': this.message_api.get_username(),\r\n                'roomname':this.message_api.get_roomname()\r\n            }\r\n            \r\n            this.message_api.send_message_to_room('image_answer', data);\r\n            this.remove_scaled_image_view();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        let content = this.state.content;\r\n        return (\r\n            <>\r\n                {/* <img id={\"image_\" + this.id}\r\n                    className=\"show_image\"\r\n                    src={this.src}\r\n                    onClick={this.handle_click}\r\n                /> */}\r\n                <Card title={this.message_api.get_username()} className={classes.root}>\r\n                    <CardMedia src={ this.src} >\r\n                        <Paper variant=\"outlined\">\r\n                            <img\r\n                                id={ \"image_\"+this.id }\r\n                                src={this.src}\r\n                                className=\"show_image\"\r\n                                onClick={this.handle_click}\r\n                            />\r\n                        </Paper>\r\n                    </CardMedia>\r\n                    {content != null ?\r\n                        <CardContent>\r\n                            {content}\r\n                        </CardContent>\r\n                        :\r\n                        null\r\n                    }\r\n                    \r\n                </Card>\r\n            </>\r\n        )\r\n    }\r\n}\r\n// export default withStyles(imageStyles)(ImageContainer);\r\nexport default withStyles(imageStyles)(ImageContainer);","export const imageStyles = {\r\n    root: {\r\n        \r\n    },\r\n    media: {\r\n        width:400,\r\n        height: 300,\r\n        paddingTop: '10%',\r\n    }\r\n}\r\n\r\nexport const answerStyles = {\r\n    root: {\r\n        \r\n    },\r\n    button: {\r\n        margin:'10px auto',\r\n    },\r\n    items: {\r\n        maxWidth:100,\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        marginBottom: 40\r\n    }\r\n}\r\n\r\nexport const homeStyles = {\r\n    root: {\r\n        flexGrow:1,\r\n    },\r\n    grid: {\r\n        \r\n    },\r\n    roomItems: {\r\n        \r\n    },\r\n    chatRoom: {\r\n        height: 200,\r\n        backgroundColor:'white'\r\n    },\r\n\r\n    roomCard: {\r\n        flexWrap: 'wrap',\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        alignItems:'center',\r\n        flex: 1,\r\n        color: 'white',\r\n        margin: 0,\r\n        padding: 1,\r\n        backgroundColor: 'black',\r\n        zIndex:2\r\n    }\r\n};","import React, {useState} from 'react'\r\nimport {api_url} from '../../global'\r\nimport PropTypes from \"prop-types\"\r\nimport { LinearProgress } from '@material-ui/core'\r\n\r\nFileContainer.prototype = {\r\n    file: PropTypes.object,\r\n    filename: PropTypes.string,\r\n    url: PropTypes.string,\r\n    dataURL: PropTypes.string,\r\n}\r\n\r\nexport default function FileContainer(props) {\r\n    let file = props.file;\r\n    let filename = props.filename;\r\n    let url = props.url;\r\n    let dataURL = props.dataURL;\r\n    \r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [fileDataURL, setFileDataURL] = useState('');\r\n\r\n    function fileToDataURL(file) {\r\n        setLoading(true);\r\n        let fileReader = new FileReader();\r\n\r\n        fileReader.onload = function (fileLoadedEvent) {\r\n            let base64 = fileLoadedEvent.target.result;\r\n            setFileDataURL(base64);\r\n            setError(false);\r\n            setLoading(false);\r\n        }\r\n\r\n        fileReader.onerror = function () {\r\n            setError(fileReader.error);\r\n            setLoading(false);\r\n        }\r\n\r\n        fileReader.onprogress = function (data) {\r\n            if (data.lengthComputable) {\r\n                let progress = parseInt(((data.loaded / data.total) * 100), 10);\r\n                setProgress(progress);\r\n            }\r\n        }\r\n\r\n        fileReader.readAsDataURL(file);\r\n    }\r\n\r\n    if (file) {\r\n        fileToDataURL(file);\r\n        return (\r\n            <>\r\n                {loading ?\r\n                    <div className=\"file_reading_progress\">\r\n                        <LinearProgress variant=\"determinate\" value={progress} />\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        {!error ?\r\n                            <>\r\n                                <div className=\"file__header\">\r\n                                    <h3 align=\"center\"></h3>\r\n                                </div>\r\n                                <a className=\"file__link\" href={fileDataURL} download>Download File</a>\r\n                            </>\r\n                            :\r\n                            <div>\r\n                                {alert(error)}\r\n                            </div>\r\n                        }\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    else if (url && filename) {\r\n        return (\r\n            <>\r\n                <div className=\"file__header\">\r\n                    <h3 align=\"center\"></h3>\r\n                </div>\r\n                <a className=\"file__link\" href={api_url + url} download>Download File</a>\r\n            </>\r\n        )\r\n    }\r\n    else if (dataURL && filename) {\r\n        return(\r\n            <>\r\n                <div className=\"file__header\">\r\n                    <h3 align=\"center\">{ filename }</h3>\r\n                </div>\r\n                <a className=\"file__link\" href={dataURL} download>Download File</a>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <h3>No File Recieved</h3>\r\n                <p>{ dataURL }</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import $ from 'jquery'\r\nimport * as chat from './ChatMessage';\r\nimport { showNotification } from './utils';\r\nimport { hide_loading_screen, display_questions_box_items_at_start } from '../styles/js/AlterCSS'\r\nimport React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport ImageContainer from '../components/containers/ImageContainer'\r\nimport FileContainer from '../components/containers/FileContainer'\r\nimport { show_info } from '../styles/js/AlterCSS'\r\n\r\nexport class WebMessageHandler {\r\n    constructor(message_api) {\r\n        this.message_api = message_api;\r\n        this.client = message_api.get_client();\r\n        this.username = message_api.get_username();\r\n        this.roomname = message_api.get_roomname();\r\n        this.user = message_api.get_user();\r\n    }\r\n    \r\n    handle_message(selector) {\r\n        \r\n        this.client.onmessage = (e) => {\r\n            const data = JSON.parse(e.data);\r\n\r\n            //when you fetch all messages\r\n            if (data['type'] === 'messages') {\r\n                let obj = {\r\n                    selector:selector,\r\n                    currentRoom: this.roomname,\r\n                    currentUser: this.user,\r\n                    messages: data.messages\r\n                }\r\n\r\n                if (this.username === data.username) {\r\n                    chat.loadAllMessages(obj);\r\n                }\r\n            }\r\n\r\n            // when new message arrived\r\n            else if (data.type === 'new_message') {\r\n                console.log(data);\r\n                if (data.status == false) {\r\n                    show_info({\r\n                        title: 'Posted Data Not Sufficient',\r\n                        content: JSON.stringify(data.error),\r\n                        color: 'red',\r\n                        time:5\r\n                    })\r\n                    return\r\n                }\r\n\r\n                if (!document.hasFocus()) {\r\n                    showNotification(data.username, data.roomname, data.message);\r\n                }\r\n                let message = data.data;\r\n                if (message.user.id === this.user.id) {\r\n                    chat.appendMessageRight(selector, message, this.user.name);\r\n                }\r\n                else {\r\n                    chat.appendMessageLeft(selector, message, message.user.name);\r\n                }\r\n                chat.performScrollIfRequired(\"message_box\");\r\n            }\r\n                \r\n            else if (data.type === 'updated_message') {\r\n                let updated_message = data;\r\n                chat.updateMessage(updated_message);\r\n            }\r\n\r\n            else if (data.type == 'clear_room_messages') {\r\n                if (data.status == true) {\r\n                    $('#'+selector).empty();\r\n                    alert(data.message);\r\n                }\r\n                else if (data.status == false)\r\n                    alert(data.message);\r\n            }\r\n                \r\n            else if (data.type === 'new_file') {\r\n                let image_extensions = ['jpg', 'JPG', 'png', 'PNG', 'jpeg', 'JPEG']\r\n                var box = document.getElementById(selector);\r\n                var div = document.createElement('div');\r\n                box.appendChild(div);\r\n                if (image_extensions.indexOf(data.extension) > 0) {\r\n                    div.className = \"chatbox_image_container\";\r\n                    div.id = \"image_container_\" + data.id;\r\n                    ReactDOM.render(\r\n                        <ImageContainer\r\n                            id={data.id}\r\n                            src={data.dataURL}\r\n                            message_api={this.message_api}\r\n                        />, div\r\n                    );\r\n                } else {\r\n                    div.className = \"file_container\";\r\n                    div.id = \"file_container_\" + data.id;\r\n                    ReactDOM.render(\r\n                        <FileContainer\r\n                            id={data.id}\r\n                            dataURL={data.dataURL}\r\n                            filename={data.filename}                            \r\n                        />, div\r\n                    )\r\n                }\r\n            }\r\n                \r\n            else if (data.type == 'active_users') {\r\n                document.getElementById('active_user_container').innerText = '';\r\n                data.users.map(user => {\r\n                    $('#active_user_container').append(`<li>${user.name}</li>`)\r\n                    console.log(`<li>${user.name}</li>`);\r\n                })\r\n            }\r\n            else if (data.type == 'image_answer') {\r\n                $('#' + data.id).parent().append(`<p> ${data.message} </p>`);\r\n            }\r\n            chat.addEvents(this.message_api, this.username, this.roomname);\r\n        }\r\n    }\r\n}\r\n\r\nexport default WebMessageHandler\r\n","const createImage = (url) =>\r\n    new Promise((resolve, reject) => {\r\n        const image = new Image();\r\n        image.addEventListener(\"load\", () => resolve(image));\r\n        image.addEventListener(\"error\", (error) => reject(error));\r\n        image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\r\n        image.src = url;\r\n    });\r\n\r\nfunction getRadianAngle(degreeValue) {\r\n    return (degreeValue * Math.PI) / 180;\r\n}\r\n\r\n/**\r\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\r\n * @param {File} image - Image File url\r\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\r\n * @param {number} rotation - optional rotation parameter\r\n */\r\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\r\n    const image = await createImage(imageSrc);\r\n    const canvas = document.createElement(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const maxSize = Math.max(image.width, image.height);\r\n    const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\r\n\r\n    // set each dimensions to double largest dimension to allow for a safe area for the\r\n    // image to rotate in without being clipped by canvas context\r\n    canvas.width = safeArea;\r\n    canvas.height = safeArea;\r\n\r\n    // translate canvas context to a central location on image to allow rotating around the center.\r\n    ctx.translate(safeArea / 2, safeArea / 2);\r\n    ctx.rotate(getRadianAngle(rotation));\r\n    ctx.translate(-safeArea / 2, -safeArea / 2);\r\n\r\n    // draw rotated image and store data.\r\n    ctx.drawImage(\r\n        image,\r\n        safeArea / 2 - image.width * 0.5,\r\n        safeArea / 2 - image.height * 0.5\r\n    );\r\n    const data = ctx.getImageData(0, 0, safeArea, safeArea);\r\n\r\n    // set canvas width to final desired crop size - this will clear existing context\r\n    canvas.width = pixelCrop.width;\r\n    canvas.height = pixelCrop.height;\r\n\r\n    // paste generated rotate image with correct offsets for x,y crop values.\r\n    ctx.putImageData(\r\n        data,\r\n        Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\r\n        Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\r\n    );\r\n\r\n    // As Base64 string\r\n    // return canvas.toDataURL('image/jpeg');\r\n\r\n    // As a blob\r\n    return new Promise((resolve) => {\r\n        canvas.toBlob((file) => {\r\n            console.log(file);\r\n            resolve(URL.createObjectURL(file));\r\n        }, \"image/jpeg\");\r\n    });\r\n}","import React, {useState, useEffect, useRef} from 'react'\r\nimport '../../styles/css/photoshop.scss'\r\nimport { Slider, CircularProgress } from '@material-ui/core'\r\nimport ReactDOM from 'react-dom'\r\nimport Cropper from 'react-easy-crop'\r\nimport getCroppedImg from '../../utils/CropImage'\r\n\r\nfunction dataURLtoFile(dataurl, filename) {\r\n    var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, { type: mime });\r\n}\r\n\r\n\r\nexport default function Photoshop(props) {\r\n    let imageFile = props.image;\r\n    let messageApi = props.messageApi;\r\n    let self = props.self;\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [saturation, setSaturation] = useState(50);\r\n    const [brightness, setBrightness] = useState(50);\r\n    const [contrast, setContrast] = useState(50);\r\n    const [grayScale, setGrayScale] = useState(0);\r\n    const [sepia, setSepia] = useState(0);\r\n    const [invert, setInvert] = useState(0);\r\n\r\n    //Variables For Cropping Of Images\r\n    const [image, setImage] = useState(null);\r\n    const [isCropping, setCropping] = useState(false);\r\n    const [croppedArea, setCroppedArea] = useState(null);\r\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n    const [zoom, setZoom] = useState(1);\r\n\r\n    function showImage(imageFile) {\r\n        var fr = new FileReader();\r\n        fr.onload = () => {\r\n            setImage(fr.result);\r\n        }\r\n        fr.readAsDataURL(imageFile);\r\n    }\r\n\r\n    const updateImage = (data) => {\r\n\r\n        if(data.saturation) setSaturation(data.saturation);\r\n        if(data.brightness) setBrightness(data.brightness);\r\n        if(data.grayscale) setGrayScale(data.grayscale);\r\n        if (data.sepia) setSepia(data.sepia);\r\n        if (data.invert) {\r\n            if (invert == 1) setInvert(0);\r\n            else setInvert(1);\r\n        }\r\n        if (data.contrast) setContrast(data.contrast);\r\n        \r\n        let image = document.getElementById('photoshop_img');\r\n        let filters = `saturate(${saturation + 50}%) brightness(${brightness + 50}%) grayscale(${grayScale}%) sepia(${sepia}%) invert(${invert}) contrast(${contrast+60}%)`;\r\n        let canvas_container = document.getElementById('photoshop_canvas_container');\r\n        // let canvas = document.getElementById('photoshop_canvas');\r\n        let canvas = document.createElement('canvas');\r\n        canvas.id = 'photoshop_canvas';\r\n        canvas.width = image.width;\r\n        canvas.height = image.height;\r\n        let context = canvas.getContext('2d');\r\n        context.filter = filters;\r\n        context.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n        canvas_container.innerHTML = null;\r\n        canvas_container.append(canvas);\r\n    }\r\n\r\n    function sendImageToRoom() {\r\n        setLoading(true);\r\n        var canvas = document.getElementById('photoshop_canvas');\r\n        let file = dataURLtoFile(canvas.toDataURL('image/jpeg'), 'photoshoped_image');\r\n        messageApi.send_file_to_group(file, 'description here', function (status) {\r\n            if (status == true) {\r\n                setLoading(false);\r\n                closePhotoshop();\r\n            } else {\r\n                setLoading('false');\r\n            }\r\n        });\r\n    }\r\n\r\n    function closePhotoshop() {\r\n        document.getElementById('root').classList.remove('blur');\r\n        ReactDOM.unmountComponentAtNode(self);\r\n        if (document.getElementById('photoshop_canvas')) ReactDOM.unmountComponentAtNode(document.getElementById('photoshop_canvas_container'));\r\n        self.remove();\r\n    }\r\n\r\n    function cropImage() {\r\n        getCroppedImg(image, croppedArea).then(croppedImageUrl => {\r\n            setImage(croppedImageUrl);\r\n            setCropping(false);\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(image === null) showImage(imageFile);\r\n        if(!isCropping) updateImage({});\r\n    },[saturation, brightness, sepia, grayScale, invert]);\r\n    return (\r\n        <>\r\n            <h2 align=\"center\">PhotoShop (Developer Shivansh Shrivastava)\r\n                <span>\r\n                    <input type=\"button\" value=\"Close Photoshop\" onClick={ closePhotoshop }/>\r\n                </span>\r\n            </h2>\r\n        <div className=\"photoshop_container\">\r\n                <div className=\"photoshop_sliders\">\r\n                    <div className=\"saturation_slider\">\r\n                        <h4>Saturation</h4>\r\n                        <Slider\r\n                            value={saturation}\r\n                            onChange={(e, data) => {\r\n                                updateImage({saturation:data});\r\n                            }}\r\n                            color=\"secondary\"\r\n                            valueLabelDisplay=\"auto\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"brightness_slider\">\r\n                        <h4>Brightness</h4>\r\n                        <Slider\r\n                            value={brightness}\r\n                            onChange={(e, data) => {\r\n                                updateImage({brightness: data});\r\n                            }}\r\n                            color=\"secondary\"\r\n                            valueLabelDisplay=\"auto\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"contrast_slider\">\r\n                        <h4>Contrast</h4>\r\n                        <Slider\r\n                            value={contrast}\r\n                            onChange={(e, data) => {\r\n                                updateImage({ contrast: data });\r\n                            }}\r\n                            color=\"secondary\"\r\n                            valueLabelDisplay=\"auto\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"grayscale_slider\">\r\n                        <h4>GrayScale</h4>\r\n                        <Slider\r\n                            value={grayScale}\r\n                            onChange={(e, data) => {\r\n                                updateImage({grayscale: data});\r\n                            }}\r\n                            color=\"secondary\"\r\n                            valueLabelDisplay=\"auto\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"sepia_slider\">\r\n                        <h4>Sepia</h4>\r\n                        <Slider\r\n                            value={sepia}\r\n                            onChange={(e, data) => {\r\n                                updateImage({sepia: data});\r\n                            }}\r\n                            color=\"secondary\"\r\n                            valueLabelDisplay=\"auto\"\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"photoshop_main\">\r\n                    <div className=\"photoshop_image_container\">\r\n                        <div className=\"img_div\">\r\n                            <img id=\"photoshop_img\" src={image} style={{ display: \"none\"}} />\r\n                        </div>\r\n                        {/* In the below div canvas will be rendered from ImageCanvas */}\r\n                        \r\n                        {isCropping ?\r\n                            <div className=\"image_crop_container\">\r\n                                <Cropper\r\n                                    image={image}\r\n                                    crop={crop}\r\n                                    zoom={zoom}\r\n                                    aspect={1}\r\n                                    onCropChange={setCrop}\r\n                                    onZoomChange={setZoom}\r\n                                    onCropComplete={(croppedAreaPercentage, croppedAreaPixels) => {\r\n                                        setCroppedArea(croppedAreaPixels);\r\n                                    }}\r\n                                />\r\n                                <div className=\"crop_buttons\">\r\n                                    <button onClick={ cropImage }>Crop Image</button>\r\n                                    <button onClick={() => setCropping(false)}>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div id=\"photoshop_canvas_container\"> </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"photoshop_button_container\">\r\n                        <div className=\"image_manipulaion_button\">\r\n                            <button onClick={() => updateImage({ invert: true })}> Invert Image </button>\r\n                            <button onClick={() => setCropping(true)}> Crop Image </button>\r\n                        </div>\r\n                        <button onClick={sendImageToRoom}> Send Image </button>\r\n                    </div>\r\n                    {loading ?\r\n                        <div className=\"flex_center_column\">\r\n                            <CircularProgress size={40} />\r\n                            <h4>Sending Image</h4>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n        </div>\r\n    </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport FileViewer from 'react-file-viewer';\r\nimport { toDataURL } from '../../utils/utils';\r\nimport { CustomBox } from '../containers/CustomBox'\r\nimport { ImCross } from 'react-icons/im'\r\n\r\n\r\nexport default function FileView(props) {\r\n\r\n    const file = props.file;\r\n    const self = props.self;\r\n\r\n    const type = file.name.split('.').pop();\r\n    const [loading, setLoading] = useState(false);\r\n    const [myFileView, setFileView] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        toDataURL(file, function (dataURL) {\r\n            setFileView(\r\n                <div className=\"absolute_center\" style={{height: '100%',width:'80%'}}>\r\n                    <FileViewer fileType={type} filePath={dataURL} />\r\n                </div>\r\n            );\r\n            setLoading(false);\r\n        })\r\n    }, [file]);\r\n\r\n    function removeSelf() {\r\n        ReactDOM.unmountComponentAtNode(self);\r\n        self.remove();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cancel_button\" onClick={removeSelf}>\r\n                <ImCross />\r\n            </div>\r\n            {loading ?\r\n                <CustomBox boxName=\"loader\" hidden={false} />\r\n                :\r\n                myFileView\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../../styles/css/popup.css';\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { show_info } from '../../styles/js/AlterCSS';\r\nimport Photoshop from '../containers/Photoshop';\r\nimport FileView from '../containers/FileView';\r\n\r\n\r\nfunction FileUploadView(props) {\r\n    let root = document.getElementById('root');\r\n    let message_api = props.message_api;\r\n    let file = props.file;\r\n    let self = props.self;\r\n\r\n    const [progress, setProgress] = useState(0);\r\n    const [conversionText, setConversionText] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function removeSelf(e) {\r\n        root.classList.remove('blur');\r\n        ReactDOM.unmountComponentAtNode(self);\r\n        self.remove();\r\n    }\r\n\r\n    function is_image_file() {\r\n        if (file.type.startsWith('image')) return true;\r\n        else return false;\r\n    }\r\n\r\n    function send_image_text() {\r\n        setLoading(true);\r\n        message_api.send_image_text(file, function (progress_value) {\r\n            setProgress(progress_value);\r\n        }, function (status) {\r\n            if (status === true) {\r\n                show_info({\r\n                    title: 'Image',\r\n                    content: 'Image To Text Conversion Successful',\r\n                    color: 'green',\r\n                    time:4\r\n                })\r\n                removeSelf();\r\n            }\r\n            else {\r\n                show_info({\r\n                    title: 'Image',\r\n                    content: 'Image To Text Conversion Failed',\r\n                    color: 'red',\r\n                    time: 4\r\n                })\r\n                removeSelf();\r\n            }\r\n            setLoading(false);\r\n        })\r\n    }\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        let to_text, direct_upload;\r\n        if(is_image_file()) to_text = e.target.ct.checked;\r\n        direct_upload = e.target.du.checked;\r\n        if (to_text && direct_upload) {\r\n            alert(\"you can't tick both\");\r\n            return;\r\n        }\r\n        else if (to_text) {\r\n            setConversionText('Converting To Text');\r\n            send_image_text();\r\n        }\r\n        else if (direct_upload) {\r\n            setLoading(true);\r\n            setConversionText('Sending File Please Wait');\r\n            message_api.send_file_to_group(file, 'here is the description', function(status){\r\n                if (status === true) {\r\n                    setLoading(false);\r\n                    removeSelf();\r\n                } else {\r\n                    setLoading(false);\r\n                    removeSelf();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            alert('please check atleast one option');\r\n            return;\r\n        }\r\n    }\r\n    function openPhotoshop() {\r\n        ReactDOM.unmountComponentAtNode(self);\r\n        self.classList.remove('popup_file__container');\r\n        self.classList.add('photoshop');\r\n        ReactDOM.render(<Photoshop image={file} messageApi={message_api} self={self}/>, self);\r\n    }\r\n\r\n    function showFile() {\r\n        let div = document.createElement('div');\r\n        div.className = 'file_view_container absolute_center';\r\n        div.id = 'file_view_id';\r\n        document.body.append(div);\r\n        ReactDOM.render(<FileView self={div} file={file} />, div);\r\n    }\r\n    if (!loading) {\r\n        return (\r\n            <>\r\n                {root.classList.add('blur')}\r\n                <div className=\"popup_file__header\">\r\n                    <h2 align=\"center\">File Upload</h2>\r\n                </div>\r\n                <div className=\"popup_file__main\">\r\n                    <form className=\"popup_file__form\" onSubmit={handleSubmit}>\r\n                        {\r\n                            is_image_file() ? \r\n                            <div>\r\n                                <input id=\"convert_to_text\" name=\"ct\" type=\"checkbox\" />\r\n                                <label htmlFor=\"convert_to_text\">Convert To Text</label>\r\n                            </div>\r\n                            :\r\n                            null\r\n                        }\r\n                        <div>\r\n                            <input id=\"direct_upload\" name=\"du\" type=\"checkbox\" />\r\n                            <label htmlFor=\"direct_upload\">Direct Upload</label>\r\n                        </div>\r\n                        <input type=\"button\" value=\"View File\" onClick={ showFile }/>\r\n                        <input type=\"submit\" value='Upload' />\r\n\r\n                        { is_image_file() ?\r\n                            < input type=\"button\" value=\"Open Photoshop\" onClick={openPhotoshop} />\r\n                            :\r\n                            null\r\n                        }\r\n                        <input type=\"button\" value=\"cancel\" onClick={removeSelf}/>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                {root.classList.remove('blur')}\r\n                <div className=\"upload_progress_container\">\r\n                    <h3 align=\"center\">{ conversionText }</h3>\r\n                    <LinearProgress variant=\"determinate\" value={progress} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUploadView\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport { websocket_url } from '../../global'\r\nimport { MessageWebApi } from '../../utils/utils'\r\nimport { WebMessageHandler } from '../../utils/Handler'\r\nimport { makeDropZone } from '../../utils/utils';\r\nimport FileUploadView from '../popup/FileUploadView';\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport default function Room(props) {\r\n    // usingDispatch to update redux store\r\n    const dispatch = useDispatch();\r\n\r\n    //fetching the data from redux store\r\n    const userData = useSelector(state => state.userData);\r\n    const roomState = useSelector(state => state.roomState);\r\n    const fileInputRef = useRef(null);\r\n\r\n    //if room is in null state then text will be displayed\r\n    const [room, setRoom] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState(false);\r\n    const [messageApi, setMessageApi] = useState(null);\r\n\r\n    let messageBoxRef = useRef(null);\r\n    var message_api, webmessage, client;\r\n\r\n    async function updateWebsocketState(room_id, group = false) {\r\n        return new Promise((resolve, reject) => {\r\n            if (messageApi) messageApi.close_connection();\r\n\r\n            if (group == true) {\r\n                client = new WebSocket(\r\n                    websocket_url\r\n                    + 'group'\r\n                    + '/'\r\n                    + room_id\r\n                    + '/?'\r\n                    + `username=${userData.username}&password=${userData.password}`\r\n                )\r\n            }\r\n            else {\r\n                client = new WebSocket(\r\n                    websocket_url\r\n                    + 'chat'\r\n                    + '/'\r\n                    + room_id\r\n                    + '/?'\r\n                    + `username=${userData.username}&password=${userData.password}`\r\n                )\r\n            }\r\n            client.onopen = () => {\r\n                message_api = new MessageWebApi(client);\r\n                message_api.set_username(userData.username);\r\n                message_api.set_password(userData.password);\r\n                message_api.set_roomname(room_id);\r\n                message_api.set_user(userData.user);\r\n                if (group == true) {\r\n                    message_api.set_is_group(true);\r\n                }\r\n                webmessage = new WebMessageHandler(message_api);\r\n                webmessage.handle_message(\"message_box\");\r\n                resolve(message_api);\r\n            }\r\n            client.onclose = () => {\r\n                reject('connection closed');\r\n            }\r\n        })\r\n    }\r\n    function uploadFile(file) {\r\n        var div = document.createElement('div');\r\n        div.classList.add('absolute_center');\r\n        div.classList.add('popup_file__container')\r\n        document.body.append(div);\r\n        ReactDOM.render(\r\n            <FileUploadView\r\n                message_api={messageApi}\r\n                file={file}\r\n                self={div}\r\n            />, div\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (roomState.currentRoom) {\r\n            if (messageBoxRef.current) messageBoxRef.current.innerText = ''\r\n            let new_room = roomState.currentRoom;\r\n            setSelected(true);\r\n            \r\n            if (new_room != room) {\r\n                setLoading(true);\r\n                //new_room = room_1 ==> we have to take substring\r\n                let id, is_group = false;\r\n                if (new_room.startsWith('room_')) id = new_room.substring(5, new_room.length);\r\n                if (new_room.startsWith('group_')) {\r\n                    id = new_room.substring(6, new_room.length);\r\n                    is_group = true;\r\n                }\r\n                \r\n                updateWebsocketState(id, is_group).then((message_api) => {\r\n                    setMessageApi(message_api);\r\n                    setRoom(new_room);\r\n                    setLoading(false);\r\n                    message_api.fetch_messages();\r\n                    makeDropZone('message_box', 'input_room_file', function (container, file) {\r\n                        var div = document.createElement('div');\r\n                        div.classList.add('absolute_center');\r\n                        div.classList.add('popup_file__container')\r\n                        document.body.append(div);\r\n                        ReactDOM.render(\r\n                            <FileUploadView\r\n                                message_api={message_api}\r\n                                file={file}\r\n                                self={div}\r\n                            />, div\r\n                        );\r\n                    })\r\n                }).catch((error) => {\r\n                    setLoading(false);\r\n                });\r\n            }\r\n        }\r\n    }, [roomState]);\r\n\r\n    function handleSendMessage(e) {\r\n        var message = document.getElementById('input_message').value;\r\n        messageApi.send_message_to_room('new_message', message);\r\n        document.getElementById('input_message').value = ''\r\n    }\r\n\r\n    //selected => if user clicked on some room or not.\r\n    if (selected && !loading) {\r\n        return (\r\n            <>\r\n                <div id=\"message_box\" ref={messageBoxRef} className=\"roomcontainer__room__messagebox\"></div>\r\n                <div className=\"roomcontainer__room__inputs\">\r\n                    <textarea id=\"input_message\" className=\"room_input\" type=\"text\" placeholder=\"Enter Your Message Here : \" />\r\n                    <button id=\"send_message_button\" className=\"room_input\" type=\"submit\" onClick={handleSendMessage}>Send Message</button>\r\n                    <input ref={fileInputRef} id='input_room_file' className=\"room_input\" type='file' hidden onChange={(e) => uploadFile(e.target.files[0])} />\r\n                    <label htmlFor=\"input_room_file\">Upload File</label>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <div className=\"roomcontainer__room__messagebox flex_center_column\">\r\n                    { !selected && !loading ?\r\n                        <h1 align=\"center\" style={{ color: 'white' }}>\r\n                            Please Select Any Room To Connect.\r\n                        </h1>\r\n                        :\r\n                        loading ?\r\n                            <div className=\"flex_center_column\">\r\n                                <CircularProgress size={70} />\r\n                                <h2 style={{ color: 'white' }}>Connecting To Room</h2>\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </div>\r\n                <div className=\"roomcontainer__room__inputs\">\r\n                    <textarea id=\"input_message\" className=\"room_input\" type=\"text\" placeholder=\"Enter Your Message Here : \" />\r\n                    <button id=\"send_message_button\" className=\"room_input\" type=\"submit\">Send Message</button>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {ApiRequester} from '../utils/utils'\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport { CustomBox } from './containers/CustomBox'\r\nimport RoomNavigation from './homecomponents/RoomNavigation'\r\nimport Room from './homecomponents/Room'\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport * as Actions from '../redux/actions'\r\nimport { BiMenu } from 'react-icons/bi'\r\n\r\n//rooms => Private Chats\r\n//ChatGroup => Groups\r\n\r\nfunction Home(props) {\r\n    let username = props.username;\r\n    let password = props.password;\r\n\r\n    let api = new ApiRequester(username, password);\r\n    \r\n    const dispatch = useDispatch();\r\n    const [drawer, setDrawer] = useState(false);\r\n    const state = useSelector(state => state.roomNavState);\r\n    const roomState = useSelector(state => state.roomState);\r\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 600px)' })\r\n    \r\n    useEffect(() => {\r\n        dispatch({type: 'UpdateLoading',payload: true})\r\n        dispatch(Actions.updateUsername(username));\r\n        dispatch(Actions.updatePassword(password));\r\n\r\n        api.setMethod('post');\r\n        api.makeRequest('/api/chat/command/get_saved_rooms/').then((response) => {\r\n            let res = response.data;\r\n            if (res.status == true) {\r\n                dispatch(Actions.updateRooms(res.data));\r\n            }\r\n            else {\r\n                localStorage.removeItem('username');\r\n                localStorage.removeItem('password');\r\n                dispatch(Actions.updateLoading(false));\r\n            }\r\n            \r\n        }).catch((error) => {\r\n            dispatch(Actions.updateError(error.message));\r\n        });\r\n        api.setMethod('get');\r\n        api.makeRequest('/api/chat/user/').then(response => {\r\n            dispatch(Actions.updateUser(response.data));\r\n            dispatch(Actions.updateLoading(false));\r\n        });\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        if (roomState.currentRoom) {\r\n            setDrawer(false);\r\n        }\r\n    }, [roomState]);\r\n\r\n    function openCloseDrawer(e) {\r\n        if (drawer) setDrawer(false);\r\n        else setDrawer(true);\r\n    }\r\n\r\n    let header = null;\r\n    // If the screen is not tablet or phone that means its a PC and since its a pc so no need of drawer. Otherwise Drawer\r\n    // is required.\r\n    if (!isTabletOrMobile) {\r\n        header =\r\n            <div id=\"room_navigation\" className=\"roomcontainer__list layout\">\r\n                <RoomNavigation/>\r\n            </div>\r\n    } else {\r\n        if (drawer)\r\n            header =\r\n                <div id=\"room_navigation\" className=\"roomcontainer__list layout\">\r\n                    <RoomNavigation />\r\n                </div>\r\n        else\r\n            header = null\r\n    }\r\n    \r\n    // This loading will be true when the saved rooms being fetched from the server.\r\n    // so from any where if you are updating the rooms you can keep this loading on.\r\n    let loading = state.loading;\r\n    if (loading == false) {\r\n        return (\r\n            <>\r\n                <div className=\"roomcontainer\">\r\n                    {header}\r\n                    <div className=\"roomcontainer__room layout\">\r\n                        <div className=\"roomheader\">\r\n                            {isTabletOrMobile ?\r\n                                <div className=\"roomheader__menu_icon\" onClick={openCloseDrawer}>\r\n                                    <BiMenu size={40} />\r\n                                </div> : null\r\n                            }\r\n                            <div className=\"roomheader__content\">\r\n                                <h2 align=\"center\">Welcome To Chatroom</h2>\r\n                                <p>Developer Shivansh Shrivastava</p>\r\n                            </div>\r\n                        </div>\r\n                        <Room />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (<CustomBox boxName=\"loader\" hidden={false} />)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    roomState:state.changeRoom\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home)","import React, { Component } from 'react'\r\nimport Home from './Home'\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { CustomBox } from './containers/CustomBox'\r\nimport {Link} from 'react-router-dom'\r\nimport { api_url } from '../global'\r\nimport { getCookie } from '../utils/ChatMessage'\r\nimport { loadImage } from '../utils/utils'\r\n\r\nexport class Login extends React.Component {\r\n    state = {\r\n        loadingImages: false,\r\n        isLoggedIn: false,\r\n        username: '',\r\n        roomname: '',\r\n        password: '',\r\n        isLoading: false,\r\n        isError: false,\r\n        errorMessage:''\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.tryLocalLogin = this.tryLocalLogin.bind(this);\r\n    }\r\n\r\n    tryLocalLogin() {\r\n        let uname = localStorage.getItem('username');\r\n        let pass = localStorage.getItem('password');\r\n        let ref = this;\r\n        if (uname && pass) {\r\n            axios({\r\n                method: 'POST',\r\n                url: api_url + '/api/chat/user/login/',\r\n                headers: { 'Content-Type': 'application/json', 'X-CSRFToken': getCookie('csrftoken') },\r\n                data: { username: uname, password: pass }\r\n            }).then(function (response) {\r\n                let res = response.data;\r\n                if (res.status == true) {\r\n                    // let root = document.getElementById('root');\r\n                    // root.style.backgroundImage = `url('')`;\r\n                    ref.setState({ username: uname, password: pass });\r\n                    ref.setState({ isError: false });\r\n                    ref.setState({ isLoading: false });\r\n                    ref.setState({ isLoggedIn: true });\r\n                    ref.setState({ loadingImages: false});\r\n                }\r\n                else {\r\n                    alert('failed');\r\n                    localStorage.removeItem('username');\r\n                    localStorage.removeItem('password');\r\n                    ref.setState({ isError: res.error });\r\n                    ref.setState({ isLoading: false });\r\n                    ref.setState({ isLoggedIn: false });\r\n                    ref.setState({ loadingImages: false});\r\n                }\r\n            }).catch(function (error) {\r\n                localStorage.removeItem('username');\r\n                localStorage.removeItem('password');\r\n                ref.setState({\r\n                    isLoggedIn: false,\r\n                    loadingImages: false,\r\n                    isLoading: false\r\n                });\r\n                alert(error.message);\r\n            });\r\n        } else {\r\n            ref.setState({\r\n                isLoggedIn: false,\r\n                loadingImages: false,\r\n                isLoading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let ref = this;\r\n        ref.setState({ loadingImages: true });\r\n        loadImage('http://static.demilked.com/wp-content/uploads/2016/06/gif-animations-replace-loading-screen-10.gif', function (src) {\r\n            let root = document.getElementById('root');\r\n            root.style.backgroundImage = `url(${src})`;\r\n            ref.tryLocalLogin(ref);\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        var username  = this.state.username;\r\n        var password = this.state.password;\r\n\r\n        if (username != \"\" && password != \"\") {\r\n            let ref = this;\r\n            axios({\r\n                method: 'POST',\r\n                url: api_url+'/api/chat/user/login/',\r\n                headers: { 'Content-Type': 'application/json', 'X-CSRFToken': getCookie('csrftoken') },\r\n                data: { 'username': username, 'password': password }\r\n            }).then((response) => {\r\n                let res = response.data;\r\n                if (res.status === true) {\r\n                    localStorage.setItem('username', username);\r\n                    localStorage.setItem('password', password);\r\n                    ref.setState({\r\n                        isLoading: false,\r\n                        isLoggedIn: true,\r\n                        isError: false,\r\n                    });\r\n                    // let root = document.getElementById('root');\r\n                    // root.style.backgroundImage = `url('')`;\r\n                }\r\n                else {\r\n                    ref.setState({\r\n                        loadingImages: false,\r\n                        isLoading: false,\r\n                        isLoggedIn: false,\r\n                        isError: true,\r\n                        errorMessage: res.error,\r\n                    });\r\n                }\r\n\r\n            }).catch((error) => {\r\n                console.log(error.message);\r\n                ref.setState({ isLoading: false, isLoggedIn: false });\r\n            })\r\n        }\r\n        else {\r\n            alert(\"You can't leave any field empty\");\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    handlePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n\r\n    handleUsername(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const isLoggedIn = this.state.isLoggedIn;\r\n        if (isLoggedIn === false && !this.state.loadingImages) {\r\n            return (\r\n                <div className=\"RoomContainer\">\r\n                    {this.state.isError ?\r\n                        <CustomBox\r\n                            boxName=\"error_box\"\r\n                            error_message={this.state.errorMessage}\r\n                            hidden={false}\r\n                        />\r\n                        :\r\n                        <CustomBox\r\n                            boxName=\"error_box\"\r\n                            hidden={true}\r\n                        />\r\n                    }\r\n                    <h2>Login To The Chatroom</h2>\r\n                    <form className=\"RoomForm\" onSubmit={this.handleSubmit}>\r\n                        <p className='intro'>Created By Shivansh Shrivastava</p>\r\n                        <label htmlFor=\"\">Enter Username: </label>\r\n                        <input className=\"input-username\" ref={inputEl => (this.searchInput = inputEl)} type=\"text\" onChange={this.handleUsername} value={this.state.username} />\r\n\r\n                        <label htmlFor=\"\">Enter Password: </label>\r\n                        <input className=\"input-room-name\" type=\"password\" onChange={this.handlePassword} value={this.state.password} />\r\n                        <div>\r\n                            <input className='input-submit' type=\"submit\" value=\"Login\"/>\r\n                            <Link to='/signup/'>\r\n                                <input className='input-submit' type=\"submit\" value=\"Go To Signup\" />\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            {this.state.isLoading ? <CircularProgress/>:null}\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.state.loadingImages) {\r\n            return (\r\n                <img src={process.env.PUBLIC_URL + '/static/media/loader1.gif'} style={{width: '100%', height:'100%'} }/>\r\n            )\r\n        }\r\n        else {\r\n            return <Home username={this.state.username} password={this.state.password}/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { CustomBox } from './containers/CustomBox'\r\nimport { api_url } from '../global'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport {show_info} from '../styles/js/AlterCSS'\r\n\r\nexport default function Signup() {\r\n    let [username, setUsername] = useState('');\r\n    let [password, setPassword] = useState('');\r\n    let [confirmPassword, setConfirmPassword] = useState('');\r\n    let [loading, setLoading] = useState(false);\r\n    let [error, setError] = useState(null);\r\n\r\n    function signup(e) {\r\n        setLoading(true);\r\n        if (username != '' && password != '') {\r\n            if (password == confirmPassword) {\r\n                axios({\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json'},\r\n                    url: api_url + '/api/chat/user/signup/',\r\n                    data:{username:username, password:password}\r\n                }).then((response) => {\r\n                    let res = response.data;\r\n                    if (res.status == true) {\r\n                        setError(null);\r\n                        setLoading(false);\r\n                        setUsername('');\r\n                        setPassword('');\r\n                        setConfirmPassword('');\r\n                        show_info({\r\n                            title: 'Room',\r\n                            content: 'Login Successful',\r\n                            color: 'green',\r\n                            time: 15\r\n                        });\r\n                    }\r\n                    else {\r\n                        setLoading(false);\r\n                        setError(res.error);\r\n                    }\r\n                })\r\n            } else {\r\n                setError('Password Not Matched');\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(false);\r\n            show_info({\r\n                title: 'Room',\r\n                content: 'Username or Password Not Provided',\r\n                color: 'red',\r\n                time: 5\r\n            });\r\n        }\r\n        e.preventDefault();\r\n    }\r\n    return (\r\n        <div className=\"RoomContainer\">\r\n            {error ?\r\n                <CustomBox boxName=\"error_box\" hidden={false} error_message={error} />\r\n                :\r\n                <CustomBox boxName=\"error_box\" hidden={true} error_message={error} />\r\n            }\r\n            <h2>Chatroom Signup</h2>\r\n            <form className=\"RoomForm\" onSubmit={signup}>\r\n                <p className='intro'>Created By Shivansh Shrivastava</p>\r\n                <label htmlFor=\"\">Username: </label>\r\n                <input className=\"input-username\" type=\"text\" onChange={(e) => setUsername(e.target.value)} value={username} />\r\n\r\n                <label htmlFor=\"\">Password: </label>\r\n                <input className=\"input-room-name\" type=\"password\" onChange={(e) => setPassword(e.target.value)} value={password} />\r\n                <label htmlFor=\"\">Confirm Password: </label>\r\n                <input className=\"input-room-name\" type=\"password\" onChange={(e) => setConfirmPassword(e.target.value)} value={confirmPassword} />\r\n                <div>\r\n                    <input className='input-submit' type=\"submit\" value=\"Signup\" />\r\n                    <Link to='/'>\r\n                        <input className='input-submit' type=\"button\" value=\"Go To Login\" />\r\n                    </Link>\r\n                    {loading ? <CircularProgress/> : null}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n// useEffect(() => {\r\n//     axios({\r\n//         method: 'POST',\r\n//         url: api_url,\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         data: { 'username': username, 'password': password }\r\n//     }).then((response) => {\r\n//         let res = response.data;\r\n//         if (res.status === true)\r\n//             alert('Awesome');\r\n//         else {\r\n//             alert(res.error);\r\n//         }\r\n//     }).catch((error) => {\r\n//         console.log(error.message)\r\n//     })\r\n// }, [])\r\n","import React from 'react'\r\nimport Login from './components/Login'\r\nimport Signup from './components/Signup'\r\nimport './styles/css/App.scss'\r\nimport './styles/css/Android.css'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Switch>\r\n            <Route path='/signup/' component={Signup} />\r\n            <Route path='/' component={Login} />\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}